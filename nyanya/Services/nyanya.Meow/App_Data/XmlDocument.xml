<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nyanya.Meow</name>
    </assembly>
    <members>
        <member name="T:nyanya.Meow.BundleConfig">
            <summary>
                BundleConfig
            </summary>
        </member>
        <member name="M:nyanya.Meow.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)">
            <summary>
                Registers the bundles.
            </summary>
            <param name="bundles">The bundles.</param>
        </member>
        <member name="T:nyanya.Meow.CQRSConfig">
            <summary>
                CQRS 配置
            </summary>
        </member>
        <member name="M:nyanya.Meow.CQRSConfig.Configurate(Domian.Config.CqrsConfiguration)">
            <summary>
                CQRS 配置.
            </summary>
        </member>
        <member name="T:nyanya.Meow.FilterConfig">
            <summary>
                FilterConfig
            </summary>
        </member>
        <member name="M:nyanya.Meow.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)">
            <summary>
                Registers the global filters.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="T:nyanya.Meow.NinjectConfig">
            <summary>
                Ninject Configuration
            </summary>
        </member>
        <member name="M:nyanya.Meow.NinjectConfig.RegisterDependencyResolver(System.Web.Http.HttpConfiguration)">
            <summary>
                RegisterDependencyResolver to HttpConfiguration
            </summary>
            <param name="config">HttpConfiguration</param>
        </member>
        <member name="M:nyanya.Meow.NinjectConfig.RegisterServices(Ninject.IKernel)">
            <summary>
                Registers the services.
            </summary>
            <param name="kernel">The kernel.</param>
        </member>
        <member name="T:nyanya.Meow.RouteConfig">
            <summary>
                RouteConfig
            </summary>
        </member>
        <member name="M:nyanya.Meow.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>
                Registers the routes.
            </summary>
            <param name="routes">The routes.</param>
        </member>
        <member name="T:nyanya.Meow.WebApiConfig">
            <summary>
                WebApiConfig
            </summary>
        </member>
        <member name="M:nyanya.Meow.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
                Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
                Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription" />. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription" />.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.HelpPageConfig">
            <summary>
                Use this class to customize the Help Page.
                For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider" /> to supply the documentation
                or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
                Registers the specified configuration.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.Controllers.HelpController">
            <summary>
                The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.Controllers.HelpController.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Areas.HelpPage.Controllers.HelpController" /> class.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.Controllers.HelpController.#ctor(System.Web.Http.HttpConfiguration)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Areas.HelpPage.Controllers.HelpController" /> class.
            </summary>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.Controllers.HelpController.Configuration">
            <summary>
                Gets the configuration.
            </summary>
            <value>
                The configuration.
            </value>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.Controllers.HelpController.Api(System.String)">
            <summary>
                APIs the specified API identifier.
            </summary>
            <param name="apiId">The API identifier.</param>
            <returns></returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.Controllers.HelpController.Index">
            <summary>
                Indexes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
                Describes a type model.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
                Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
                Use this attribute to change the name of the <see cref="T:nyanya.Meow.Areas.HelpPage.ModelDescriptions.ModelDescription" /> generated for a type.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,nyanya.Meow.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,nyanya.Meow.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters.
            First, it will look at the <see cref="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:nyanya.Meow.Areas.HelpPage.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},nyanya.Meow.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.#ctor(nyanya.Meow.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,nyanya.Meow.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:nyanya.Meow.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:nyanya.Meow.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:nyanya.Meow.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:nyanya.Meow.Controllers.BAProductInfoController">
            <summary>
                银承产品信息
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.BAProductInfoController.#ctor(Cat.Domain.Products.Services.Interfaces.IBAProductInfoService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.BAProductInfoController" /> class.
            </summary>
            <param name="baProductInfoService">The ba product information service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.BAProductInfoController.Index(System.Int32)">
            <summary>
                获取首页显示的产品信息（现在数量暂定为6个） => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="category">产品分类(10金银猫产品 20富滇产品 40阜新产品)</param>
            <returns>
                AvailableShareCount[int]: 可购买份额
                BankName[string]: 银行名称
                BillNo[string]: 银票编号
                BusinessLicense[string]: 营业执照号码
                CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                EndorseImageLink[string]: 票据大图链接
                EndorseImageThumbnailLink[string]: 票据缩略图链接
                EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                EnterpriseName[string]: 企业名称
                ExtraYield[deciaml]: 额外收益率
                FinancingSum[int]: 融资金额
                FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                MaxShareCount[int]: 单笔订单最大购买份数
                MinShareCount[int]: 单笔订单最小购买份数
                OnPreSale[bool]: 是否在预售状态
                OnSale[bool]: 是否在开售状态
                PaidPercent[int]: 销售百分比
                PaidShareCount[int]: 已付款份数
                PayingShareCount[int]: 付款中份数
                Period[int]: 项目周期
                PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                PreSale[bool]: 是否有提前购买设置
                PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                ProductIdentifier[string]: 产品唯一标识符
                ProductName[string]: 产品名称
                ProductNo[string]: 产品编号，银承产品以F开头
                ProductNumber[int]: 产品期数
                Repaid[bool]: 是否已经操作还款
                RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                SoldOut[bool]: 是否售罄
                SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                UnitPrice[int]: 每一份的单价
                Usage[string]: 融资用途
                ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                ValueDateString[string]: 备选的起息日显示文案
                Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品，40 => 阜新产品
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.BAProductInfoController.Info(System.String)">
            <summary>
                获取产品详情 => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="productNo">产品编号</param>
            <returns>
                AvailableShareCount[int]: 可购买份额
                BankName[string]: 银行名称
                BillNo[string]: 银票编号
                BusinessLicense[string]: 营业执照号码
                CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                EndorseImageLink[string]: 票据大图链接
                EndorseImageThumbnailLink[string]: 票据缩略图链接
                EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                EnterpriseName[string]: 企业名称
                ExtraYield[deciaml]: 额外收益率
                FinancingSum[int]: 融资金额
                FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                MaxShareCount[int]: 单笔订单最大购买份数
                MinShareCount[int]: 单笔订单最小购买份数
                OnPreSale[bool]: 是否在预售状态
                OnSale[bool]: 是否在开售状态
                PaidPercent[int]: 销售百分比
                PaidShareCount[int]: 已付款份数
                PayingShareCount[int]: 付款中份数
                Period[int]: 项目周期
                PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                PreSale[bool]: 是否有提前购买设置
                PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                ProductIdentifier[string]: 产品唯一标识符
                ProductName[string]: 产品名称
                ProductNo[string]: 产品编号，银承产品以F开头
                ProductNumber[int]: 产品期数
                Repaid[bool]: 是否已经操作还款
                RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                SoldOut[bool]: 是否售罄
                SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                UnitPrice[int]: 每一份的单价
                Usage[string]: 融资用途
                ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                ValueDateString[string]: 备选的起息日显示文案
                Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品，40 => 阜新产品
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.BAProductInfoController.Page(System.Int32,System.Int32)">
            <summary>
                获取产品信息列表（现在每页数量暂定为10个，只能指定页数，从1开始） => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="number">页码，从1开始</param>
            <param name="category">产品分类（10金银猫产品 20富滇产品 40阜新产品） </param>
            <returns>
                TotalPageCount[int]: 总页数
                TotalCount[int]: 总数据数量
                HasNextPage[bool]: 是否有下一页
                PageIndex[int]: 当前页码,从1开始
                PageSize[int]: 页面大小
                Products[array]: 产品信息列表
                - - AvailableShareCount[int]: 可购买份额
                - - BankName[string]: 银行名称
                - - BillNo[string]: 银票编号
                - - BusinessLicense[string]: 营业执照号码
                - - CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                - - EndorseImageLink[string]: 票据大图链接
                - - EndorseImageThumbnailLink[string]: 票据缩略图链接
                - - EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                - - EnterpriseName[string]: 企业名称
                - - ExtraYield[deciaml]: 额外收益率
                - - FinancingSum[int]: 融资金额
                - - FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                - - LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                - - MaxShareCount[int]: 单笔订单最大购买份数
                - - MinShareCount[int]: 单笔订单最小购买份数
                - - OnPreSale[bool]: 是否在预售状态
                - - OnSale[bool]: 是否在开售状态
                - - PaidPercent[int]: 销售百分比
                - - PaidShareCount[int]: 已付款份数
                - - PayingShareCount[int]: 付款中份数
                - - Period[int]: 项目周期
                - - PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                - - PreSale[bool]: 是否有提前购买设置
                - - PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                - - ProductIdentifier[string]: 产品唯一标识符
                - - ProductName[string]: 产品名称
                - - ProductNo[string]: 产品编号，银承产品以F开头
                - - ProductNumber[int]: 产品期数
                - - Repaid[bool]: 是否已经操作还款
                - - RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                - - ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                - - SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                - - ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                - - SoldOut[bool]: 是否售罄
                - - SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                - - StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                - - SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                - - UnitPrice[int]: 每一份的单价
                - - Usage[string]: 融资用途
                - - ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                - - ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                - - ValueDateString[string]: 备选的起息日显示文案
                - - Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                - - ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品，40 => 阜新产品
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.BAProductInfoController.Top">
            <summary>
                获取首个产品信息 => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <returns>
                AvailableShareCount[int]: 可购买份额
                BankName[string]: 银行名称
                BillNo[string]: 银票编号
                BusinessLicense[string]: 营业执照号码
                CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                EndorseImageLink[string]: 票据大图链接
                EndorseImageThumbnailLink[string]: 票据缩略图链接
                EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                EnterpriseName[string]: 企业名称
                ExtraYield[deciaml]: 额外收益率
                FinancingSum[int]: 融资金额
                FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                MaxShareCount[int]: 单笔订单最大购买份数
                MinShareCount[int]: 单笔订单最小购买份数
                OnPreSale[bool]: 是否在预售状态
                OnSale[bool]: 是否在开售状态
                PaidPercent[int]: 销售百分比
                PaidShareCount[int]: 已付款份数
                PayingShareCount[int]: 付款中份数
                Period[int]: 项目周期
                PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                PreSale[bool]: 是否有提前购买设置
                PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                ProductIdentifier[string]: 产品唯一标识符
                ProductName[string]: 产品名称
                ProductNo[string]: 产品编号，银承产品以F开头
                ProductNumber[int]: 产品期数
                Repaid[bool]: 是否已经操作还款
                RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                SoldOut[bool]: 是否售罄
                SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                UnitPrice[int]: 每一份的单价
                Usage[string]: 融资用途
                ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                ValueDateString[string]: 备选的起息日显示文案
                Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品，40 => 阜新产品
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.DevHelperController">
            <summary>
                开发辅助接口(非业务接口，用于辅助开发)
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.DevHelperController.Echo">
            <summary>
                回声
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.DevHelperController.Ip">
            <summary>
                服务器IP
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.DevHelperController.Status">
            <summary>
                服务器状态
            </summary>
        </member>
        <member name="T:nyanya.Meow.Controllers.InvestingController">
            <summary>
                InvestingController
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.InvestingController.#ctor(Cat.Domain.Users.Services.Interfaces.IUserService,Domian.Bus.ICommandBus,Cat.Domain.Products.Services.Interfaces.IExactProductInfoService,Cat.Domain.Users.Services.Interfaces.IExactUserInfoService,Cat.Domain.Products.Services.Interfaces.IZCBProductInfoService,Cat.Domain.Orders.Services.Interfaces.IZCBOrderService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.InvestingController" /> class.
            </summary>
            <param name="userService">The user service.</param>
            <param name="commandBus">The command bus.</param>
            <param name="productInfoService">The product information service.</param>
            <param name="userInfoService">The user information service.</param>
            <param name="zcbProductInfoService">The zcbproduct information service.</param>
            <param name="zcbOrderService">The ZCB order service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.InvestingController.Investing(nyanya.Meow.Models.InvestingRequest)">
            <summary>
                投资理财产品
            </summary>
            <param name="request">
                ProductNo[string]: 产品编号
                Count[int]: 购买的份数
                BankCardNo[string]: 银行卡号
                PaymentPassword[string]: 支付密码
                ActivityNo[decimal]：活动本金券类型(非必填参数)【0.1=>增益券0.1%，0.2=>增益券0.2%，0.3=>增益券0.3%，0.4=>增益券0.4%，0.5=>增益券0.5%，0.6=>增益券0.6%】[500 => 500 本金券 150119 活动所用]
                ClientType[long]: 客户端标识(推广相关)
                FlgMoreI1[long]: FlgMoreI1(推广相关)
                FlgMoreI2[long]: FlgMoreI2(推广相关)
                FlgMoreS1[string]: FlgMoreS1(推广相关)
                FlgMoreS2[string]: FlgMoreS2(推广相关)
            </param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                OrderNo[string]: 订单编号
                @{h2@} HttpStatusCode:400 @{/h2@}
                "为保障您的资金账户安全，请重置支付密码后再试"
                "支付密码错误，您还有{0}次机会"
                "银行卡信息错误"
                "该产品已停止售卖"
                "对不起，剩余份额已不足！请重新选择！"
                "该产品未开售或已停止售卖"
                "购买份额错误"
                "请稍后再试"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.InvestingController.Reinvesting">
            <summary>
                金包银复投
            </summary>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                OrderNo[string]: 订单编号
                @{h2@} HttpStatusCode:400 @{/h2@}
                "对不起，剩余份额已不足！请重新选择！"
                "现在无正在售卖的金包银产品"
                "购买份额错误"
                "请稍后再试"
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.ItemsController">
            <summary>
                道具相关接口
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.ItemsController.ConsumeByOrder(nyanya.Meow.Models.ItemConsumeRequest)">
            <summary>
                为指定的订单使用道具
            </summary>
            <param name="request">
                ItemId[int]: 道具Id
                OrderIdentifier[string]: 订单Identifier
            </param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                {"V": "1.23"}(保留2位小数)
                @{h2@} HttpStatusCode:400 @{/h2@}
                "道具不存在"
                "订单不存在"
                "道具使用失败"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ItemsController.DistributeItem(System.String)">
            <summary>
                Distributes the FHP item.(非业务接口)
            </summary>
            <param name="userGuid">The user unique identifier.</param>
            <returns>
                200/400("该用户不存在。")
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ItemsController.GetItems(nyanya.AspDotNet.Common.RequestCommands.PaginatedRequestCommand)">
            <summary>
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/M-GET-Items_PageIndex_PageSize.jpg"@}获取道具列表 - M @{/a@}
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/APP-GET-Items_PageIndex_PageSize.jpg"@}获取道具列表 - APP@{/a@}
            </summary>
            <param name="cmd">
                PageIndex(int >= 1): 页码
                PageSize(20 >= int >= 1): 一页节点数量
            </param>
            <returns>
                @{h3@} 分页列表: @{/h3@}
                HasNextPage: 是否有下一页
                PageIndex: 页码
                PageSize: 一页节点数量
                TotalCount: 所有的节点数量
                TotalPageCount: 总页数
                Items:节点列表
                -- Id: 道具Id
                -- InterestDescription: 道具描述
                -- Expires: 过期时间
                -- HasExpired[bool]: 是否过期
                -- ImageSrc: 图片地址，绝对地址 http://m.jinyinmao.com.cn/public/ItemImages/V1/{size}/001.jpg ({size}整体替换为需要的大小)
                -- -- -- -- -- -- -- -- --例如 http://m.jinyinmao.com.cn/public/ItemImages/V1/720/001.jpg ({size}整体替换为需要的大小)
                -- Title: 道具名称
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ItemsController.GetItemsCount">
            <summary>
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/M-GET-Orders_PageIndex_PageSize.jpg"@}获取道具数量和道具是否有更新 - M @{/a@}
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/APP-GET-Orders_PageIndex_PageSize.jpg"@}获取道具数量和道具是否有更新 - APP@{/a@}
            </summary>
            <returns>
                Count: 道具数量
                New[bool]: 是否有新道具
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ItemsController.GetUseableItems(nyanya.Meow.Models.UseableItemsRequest)">
            <summary>
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/M-GET-Items_PageIndex_PageSize.jpg"@}获取可以使用的道具列表 - M @{/a@}
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/APP-GET-Items_PageIndex_PageSize.jpg"@}获取可以使用道具的列表 - APP@{/a@}
            </summary>
            <param name="cmd">
                OrderId(int >= 1): 道具Id
                PageIndex(int >= 1): 页码
                PageSize(20 >= int >= 1): 一页节点数量
            </param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                @{h3@} 分页列表: @{/h3@}
                HasNextPage: 是否有下一页
                PageIndex: 页码
                PageSize: 一页节点数量
                TotalCount: 所有的节点数量
                TotalPageCount: 总页数
                -- Id: 道具Id
                -- InterestDescription: 道具描述
                -- Expires: 过期时间
                -- HasExpired[bool]: 是否过期
                -- ImageSrc: 图片地址，绝对地址 http://m.jinyinmao.com.cn/public/ItemImages/V1/{size}/001.jpg ({size}整体替换为需要的大小)
                -- -- -- -- -- -- -- -- --例如 http://m.jinyinmao.com.cn/public/ItemImages/V1/720/001.jpg ({size}整体替换为需要的大小)
                -- Title: 道具名称
                @{h2@} HttpStatusCode:400 @{/h2@}
                "订单不存在。"
                "订单不能使用该道具。"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ItemsController.RemoveItem(System.Int32)">
            <summary>
                Removes the item.
            </summary>
            <param name="id">道具ID</param>
            <returns>200 No Content</returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.ActivityInfo">
             <summary>
            
             </summary>
        </member>
        <member name="P:nyanya.Meow.Controllers.ActivityInfo.ActivityNo">
            <summary>
            Gets or sets the activity no.
            </summary>
            <value>
            The activity no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Controllers.ActivityInfo.BeginTime">
            <summary>
            Gets or sets the begin time.
            </summary>
            <value>
            The begin time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Controllers.ActivityInfo.EndTime">
            <summary>
            Gets or sets the end time.
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="T:nyanya.Meow.Controllers.LuckhubController">
            <summary>
            幸运大转盘
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.commandBus">
            <summary>
            The command bus
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.userInfoService">
            <summary>
            The user information service
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.orderInfoService">
            <summary>
            The order information service
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.DefaultList">
            <summary>
            The default list
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.BeginTime">
            <summary>
            The begin time
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.userService">
            <summary>
                The user service
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.ActivityNoNew">
            <summary>
            The activity no new
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.EndTime">
            <summary>
            The end time
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.ActivityNew">
            <summary>
            The activity new
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.LuckhubController.veriCodeService">
            <summary>
            The veri code service
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.LuckhubController.#ctor(Domian.Bus.ICommandBus,Cat.Domain.Users.Services.Interfaces.IExactUserInfoService,Cat.Domain.Orders.Services.Interfaces.IOrderInfoService,Cat.Domain.Auth.Services.Interfaces.IVeriCodeService,Cat.Domain.Users.Services.Interfaces.IUserService)">
            <summary>
            构造函数
            </summary>
            <param name="commandBus">commandBus</param>
            <param name="userInfoService">The user information service.</param>
            <param name="orderInfoService">The order information service.</param>
            <param name="veriCodeService">The veri code service.</param>
            <param name="userService"></param>
        </member>
        <member name="M:nyanya.Meow.Controllers.LuckhubController.GetUserCanPalyStatu">
            <summary>
            获取用户奖品信息,登录状态下
            </summary>
            <returns>
            状态(10=没有资格，20=未领取未使用，30=领取未使用，40=已使用，50=已过期，60=奖品无效)
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.LuckhubController.GetUserGetStatus(System.String)">
            <summary>
            获取用户奖品信息(非登录状态）
            </summary>
            <param name="cellphone">The request.
                Cellphone：手机号
            </param>
            <returns>
            状态(true=>已领取，false=>未领取)
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.LuckhubController.BuildLuckRecord(nyanya.Meow.Models.Luckhub.LuckUserRequest)">
            <summary>
            领取或使用用户奖品
            </summary>
            <param name="request">The request.
                 Cellphone：手机号（领取时填，使用时为空）
                Token:图形验证码验证成功后的Token（领取时填，使用时不检查）
            </param>
            <returns>
            状态(10=没有资格，20=未领取未使用，30=领取成功，40=之前已领取，50=使用成功，60=之前已使用，70=已过期，80=奖品无效,90=验证码错误)
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.LuckhubController.BuildLuckRecords(Cat.Domain.Users.ReadModels.UserInfo)">
            <summary>
            Builds the luck records.
            </summary>
            <param name="userInfo">The user information.</param>
            <returns></returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.OrderInfoController">
            <summary>
                OrderInfoController
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.#ctor(Cat.Domain.Orders.Services.Interfaces.IBAOrderInfoService,Cat.Domain.Orders.Services.Interfaces.ITAOrderInfoService,Cat.Domain.Orders.Services.Interfaces.IOrderInfoService,Cat.Domain.Users.Services.Interfaces.IExactUserInfoService,Cat.Domain.Orders.Services.Interfaces.IZCBOrderService,Domian.Bus.ICommandBus,Cat.Domain.Users.Services.Interfaces.IUserService,Cat.Domain.Products.Services.Interfaces.IProductInfoService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.OrderInfoController" /> class.
            </summary>
            <param name="baOrderInfoService">The ba order information service.</param>
            <param name="taOrderInfoService">The ta order information service.</param>
            <param name="orderInfoService">The order information service.</param>
            <param name="userInfoService">The user information service.</param>
            <param name="zcbOrderService">The zcb order information service.</param>
            <param name="commandBus">The command bus.</param>
            <param name="userService">The user service.</param>
            <param name="productService"></param>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetBAFailedOrders(System.Int32)">
            <summary>
                银票失败订单列表
            </summary>
            <param name="category">产品分类(10金银猫产品 20富滇产品 40阜新产品)</param>
            <returns>
                HasNextPage: 是否有下一页
                PageIndex: 页码
                PageSize: 一页节点数量
                TotalCount: 所有的节点数量
                TotalPageCount: 总页数
                Orders:节点列表
                -- ExtraInterest[decimal]: 额外收益
                -- Interest[decimal]: 预期收益
                -- Message[string]: 提示信息
                -- OrderIdentifier[string]: 订单唯一标识
                -- OrderNo[string]: 订单编号
                -- OrderTime[yyyy-MM-ddTHH:mm:ss]: 下单时间
                -- Principal[decimal]: 订单金额
                -- ProductIdentifier[string]: 项目唯一标识
                -- ProductName[string]: 项目名称
                -- ProductNo[string]: 项目编号
                -- ProductNumber[int]: 项目期数
                -- SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息日期
                -- ShareCount[int]: 订单的购买份数
                -- ShowingStatus[int]: 项目状态  10 => 付款中, 20 => 待起息, 30 => 已起息, 40 => 已结息, 50 => 支付失败
                -- TotalAmount[decimal]: 订单的本息总额
                -- UseableItemCount[int]: 可用道具数 => -1:已用道具  0:无可用道具  1~999:有可用道具
                -- ValueDate[yyyy-MM-ddTHH:mm:ss]: 起息日期
                -- Yield[decimal]: 订单的预期收益率
                -- ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品，40 => 阜新产品
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetBAOrders(System.Int32,System.Int32,System.Int32)">
            <summary>
                银票成功订单列表
            </summary>
            <param name="pageIndex">pageIndex(int >= 1): 页码</param>
            <param name="sortMode">排序规则 1 => 按下单时间排序，2 => 按结息日期排序</param>
            <param name="category">产品分类(10金银猫产品 20富滇产品 40阜新产品)</param>
            <returns>
                HasNextPage: 是否有下一页
                PageIndex: 页码
                PageSize: 一页节点数量
                TotalCount: 所有的节点数量
                TotalPageCount: 总页数
                Orders:节点列表
                -- ExtraInterest[decimal]: 额外收益
                -- Interest[decimal]: 预期收益
                -- Message[string]: 提示信息
                -- OrderIdentifier[string]: 订单唯一标识
                -- OrderNo[string]: 订单编号
                -- OrderTime[yyyy-MM-ddTHH:mm:ss]: 下单时间
                -- Principal[decimal]: 订单金额
                -- ProductIdentifier[string]: 项目唯一标识
                -- ProductName[string]: 项目名称
                -- ProductNo[string]: 项目编号
                -- ProductNumber[int]: 项目期数
                -- SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息日期
                -- ShareCount[int]: 订单的购买份数
                -- ShowingStatus[int]: 项目状态  10 => 付款中, 20 => 待起息, 30 => 已起息, 40 => 已结息, 50 => 支付失败
                -- TotalAmount[decimal]: 订单的本息总额
                -- UseableItemCount[int]: 可用道具数 => -1:已用道具  0:无可用道具  1~999:有可用道具
                -- ValueDate[yyyy-MM-ddTHH:mm:ss]: 起息日期
                -- Yield[decimal]: 订单的预期收益率
                -- ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品，40 => 阜新产品
                -- IsRepaid[bool]: 是否已经操作还款
                -- ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                -- RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetOrder(System.String)">
            <summary>
                订单详情
            </summary>
            <param name="orderIdentifier">订单唯一标识</param>
            <returns>
                BankCardCity[string]: 开户行城市全称，如 上海|上海
                BankCardCityName[string]: 开户行城市名
                BankCardNo[string]: 银行卡号
                BankName[string]: 银行名称
                ConsignmentAgreementName[string]: 委托协议名称
                EndorseImageLink[string]: 质押物链接
                EndorseImageThumbnailLink[string]: 质押物缩略图链接
                ExtraInterest[decimal]: 额外收益
                HasResult[bool]: 是否有支付结果
                Interest[decimal]: 预期收益
                InvestorCellphone[string]: 投资人手机号
                InvestorCredential[string]: 证件类型名称，直接显示
                InvestorCredentialNo[string]: 证件编号，已加码，可以直接显示
                InvestorRealName[string]: 投资人真实姓名
                IsPaid[bool]: 是否支付成功,只有当HasResult为true时，该值有意义，推荐使用ShowingStatus字段
                Message[string]: 提示信息
                OrderIdentifier[string]: 订单唯一标识
                OrderNo[string]: 订单编号
                OrderTime[yyyy-MM-ddTHH:mm:ss]: 下单时间
                OrderType[int]: 订单类型 10 => 银票订单, 20 => 商票订单
                Period[int]: 投资周期
                PledgeAgreementName[string]: 质押借款协议名称
                Principal[decimal]: 订单金额
                ProductIdentifier[string]: 项目唯一标识
                ProductName[string]: 项目名称
                ProductNo[string]: 项目编号
                ProductNumber[int]: 项目期数
                ProductUnitPrice[decimal]: 项目的单价，即每份多少钱
                ResultTime[yyyy-MM-ddTHH:mm:ss]: 支付清算时间
                RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日
                SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息日期
                ShareCount[int]: 订单的购买份数
                ShowingStatus[int]: 项目状态  10 => 付款中, 20 => 待起息, 30 => 已起息, 40 => 已结息, 50 => 支付失败
                TotalAmount[decimal]: 订单的本息总额
                UseableItemCount[int]: 可用道具数 => -1:已用道具  0:无可用道具  1~999:有可用道具
                ValueDate[yyyy-MM-ddTHH:mm:ss]: 起息日期
                Yield[decimal]: 订单的预期收益率
                IsRepaid[bool]: 是否已经操作还款
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetOrderConsignmentAgreement(System.String)">
            <summary>
                订单委托协议
            </summary>
            <param name="orderIdentifier">订单唯一标识</param>
            <returns>
                Content[string]: 委托协议内容
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetOrderPledgeAgreement(System.String)">
            <summary>
                订单质押借款协议
            </summary>
            <param name="orderIdentifier">订单唯一标识</param>
            <returns>
                Content[string]: 委托协议内容
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetTAFailedOrders">
            <summary>
                商票失败订单列表
            </summary>
            <returns>
                HasNextPage: 是否有下一页
                PageIndex: 页码
                PageSize: 一页节点数量
                TotalCount: 所有的节点数量
                TotalPageCount: 总页数
                Orders:节点列表
                -- ExtraInterest[decimal]: 额外收益
                -- Interest[decimal]: 预期收益
                -- Message[string]: 提示信息
                -- OrderIdentifier[string]: 订单唯一标识
                -- OrderNo[string]: 订单编号
                -- OrderTime[yyyy-MM-ddTHH:mm:ss]: 下单时间
                -- Principal[decimal]: 订单金额
                -- ProductIdentifier[string]: 项目唯一标识
                -- ProductName[string]: 项目名称
                -- ProductNo[string]: 项目编号
                -- ProductNumber[int]: 项目期数
                -- SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息日期
                -- ShareCount[int]: 订单的购买份数
                -- ShowingStatus[int]: 项目状态  10 => 付款中, 20 => 待起息, 30 => 已起息, 40 => 已结息, 50 => 支付失败
                -- TotalAmount[decimal]: 订单的本息总额
                -- UseableItemCount[int]: 可用道具数 => -1:已用道具  0:无可用道具  1~999:有可用道具
                -- ValueDate[yyyy-MM-ddTHH:mm:ss]: 起息日期
                -- Yield[decimal]: 订单的预期收益率
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetTAOrders(System.Int32,System.Int32)">
            <summary>
                商票成功订单列表
            </summary>
            <param name="pageIndex">pageIndex(int >= 1): 页码</param>
            <param name="sortMode">排序规则 1 => 按下单时间排序，2 => 按结息日期排序</param>
            <returns>
                HasNextPage: 是否有下一页
                PageIndex: 页码
                PageSize: 一页节点数量
                TotalCount: 所有的节点数量
                TotalPageCount: 总页数
                Orders:节点列表
                -- ExtraInterest[decimal]: 额外收益
                -- Interest[decimal]: 预期收益
                -- Message[string]: 提示信息
                -- OrderIdentifier[string]: 订单唯一标识
                -- OrderNo[string]: 订单编号
                -- OrderTime[yyyy-MM-ddTHH:mm:ss]: 下单时间
                -- Principal[decimal]: 订单金额
                -- ProductIdentifier[string]: 项目唯一标识
                -- ProductName[string]: 项目名称
                -- ProductNo[string]: 项目编号
                -- ProductNumber[int]: 项目期数
                -- SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息日期
                -- ShareCount[int]: 订单的购买份数
                -- ShowingStatus[int]: 项目状态  10 => 付款中, 20 => 待起息, 30 => 已起息, 40 => 已结息, 50 => 支付失败
                -- TotalAmount[decimal]: 订单的本息总额
                -- UseableItemCount[int]: 可用道具数 => -1:已用道具  0:无可用道具  1~999:有可用道具
                -- ValueDate[yyyy-MM-ddTHH:mm:ss]: 起息日期
                -- Yield[decimal]: 订单的预期收益率
                -- IsRepaid[bool]: 是否已经操作还款
                -- ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                -- RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetZCBUser">
            <summary>
            资产包订单用户总览
            </summary>
            ProductIdentifier[string]: 产品唯一标示符
            ProductNo[string]: 产品编号
            TotalPrincipal[decimal]: 投资总金额
            CurrentPrincipal[decimal]: 当前正在投资总额
            TotalInterest[decimal]: 累计总收益
            TotalRedeemInterest[decimal]: 累计提现收益
            YesterdayInterest[decimal]: 昨日收益
            Yield[decimal]: 今日利率
            <returns></returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetZCBBills(System.Int32)">
            <summary>
            资产包认购/提现流程列表
            </summary>
            <param name="pageIndex">pageIndex(int &gt;= 1): 页码</param>
            <returns>
            HasNextPage: 是否有下一页
            PageIndex: 页码
            PageSize: 一页节点数量
            TotalCount: 所有的节点数量
            TotalPageCount: 总页数
            ZCBBills：节点列表
            -- BillIdentifier[string]：流水标示号
            -- ProductIdentifier[string]：项目唯一标识
            -- CreateTime[yyyy-MM-ddTHH:mm:ss]：创建时间
            -- Type[int]：交易类型 10 =&gt; 认购 20 =&gt; 提现
            -- Principal[decimal]：交易金额
            -- BankCardNo[string]：银行卡号
            -- BankName[string]：银行名称
            -- BankCardCity[string]：开户行城市全称，如 上海|上海
            -- Status[int]：流水状态 10 =&gt; 付款中 20 =&gt; 认购成功 30 =&gt; 认购失败 40 =&gt; 取现已申请 50 =&gt; 取现成功 60 =&gt; 提现失败
            -- Remark[string]：流水信息描述
            -- DalayDate[yyyy-MM-ddTHH:mm:ss]：预计提现到账时间
            -- AgreementName[string]：协议名称（Status=20或Status=50的时候，该变量才会有值）
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetZCBUserBills(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32)">
            <summary>
                资产包用户每日收益列表
            </summary>
            <param name="pageIndex">pageIndex(int =1)：页码</param>
            <param name="startTime">startTime(yyyy-MM-dd)：开始时间</param>
            <param name="endTime">endTime(yyyy-MM-dd)：结束时间</param>
            <returns>
            HasNextPage：是否有下一页
            PageIndex：页码
            PageSize：一页节点数量
            TotalCount：所有的节点数量
            TotalPageCount：总页数
            ZCBUserBills：节点列表
            -- BillDate[yyyy-MM-dd]：日期
            -- Principal[decimal]：投资总额
            -- Yield[decimal]：收益率
            -- Interest[decimal]：收益
            -- Remark[string]：备注
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetRedeemParameters">
            <summary>
                用户资产包提现所需参数
            </summary>
            <returns>
            RedeemCount：用户当日已提现次数
            TodayIsInvesting：今天是否有投资金额 10 => 是 20 => 否
            InvestingAndUnRedeemPrincipal：今天投资金额和还未处理的提现金额的总和 
            AvailableRedeemPrincipal（当天实际可以提现的本金）  = 当前正在投资总额 - 今天投资金额和还未处理的提现金额的总和）
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.RedeemPrincipal(nyanya.Meow.Models.RedeemPrincipalRequest)">
            <summary>
            赎回本金
            </summary>
            <param name="request">
            ProductNo[string]：产品编号
            BankCardNo[string]：银行卡号
            RedeemPrincipal[decimal]：赎回本金
            PaymentPassword[string]：支付密码
            </param>
            <returns>
            @{h2@} HttpStatusCode:200 @{/h2@}
            No Content
            @{h2@} HttpStatusCode:400 @{/h2@}
            "提现金额不能有小数"
            "为保障您的资金账户安全，请重置支付密码后再试"
            "支付密码错误，您还有{0}次机会"
            "订单不存在"
            "购买当日不能取款"
            "当日取款次数已满2次"
            "输入金额大于可取回金额"
            "输入金额大于单次取款限额"
            "输入金额大于项目可取限额"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.BuildRedeemPrincipalCommand(nyanya.Meow.Models.RedeemPrincipalRequest,Cat.Domain.Orders.Services.DTO.ZCBUserRemainRedeemInfo,Cat.Domain.Products.Models.Product)">
            <summary>
            Builds the redeem principal command.
            </summary>
            <param name="request">The request.</param>
            <param name="info">The information.</param>
            <param name="productResult">The product result.</param>
            <returns></returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetActivityStatus1000">
            <summary>
            获取用户【500元本金活动】状态
            </summary>
            <returns>
            Status：状态(10=>不符合，20=>符合但没有下单，30=>符合且已经下单，40=>已过期)
            ExtraInterest：额外收益
            MiniCash: 起投金额
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.OrderInfoController.GetUserActivityStatu_1000(Cat.Domain.Users.ReadModels.UserInfo)">
            <summary>
            获取用户【500元本金活动】状态
            </summary>
            <param name="userInfo">用户信息</param>
            <returns>
            Status：状态(20=>符合但没有下单，30=>符合且已经下单，40=>已过期)
            ExtraInterest：额外收益
            MiniCash: 起投金额
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.ProductInfoController">
            <summary>
                ProductInfo
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.ProductInfoController.#ctor(Cat.Domain.Products.Services.Interfaces.IProductInfoService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.ProductInfoController" /> class.
            </summary>
            <param name="productInfoService">The product information service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.ProductInfoController.GetConsignmentAgreement(System.String)">
            <summary>
                产品协议模板
            </summary>
            <param name="productIdentifier">The product identifier.</param>
            <returns>
                Content[string]: 协议内容
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ProductInfoController.GetPledgeAgreement(System.String)">
            <summary>
                产品协议模板
            </summary>
            <param name="productIdentifier">The product identifier.</param>
            <returns>
                Content[string]: 协议内容
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ProductInfoController.GetSaleProcess(System.String)">
            <summary>
                获取产品的销售进度信息
            </summary>
            <param name="productIdentifier">项目唯一标识，32位字符串，不是项目编号</param>
            <returns>
                Available[int]: 可购买份额
                Sum[int]: 融资金额
                Paid[int]: 已付款份数
                Paying[int]: 付款中份数
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.TAProductInfoController">
            <summary>
                商承产品信息
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.TAProductInfoController.#ctor(Cat.Domain.Products.Services.Interfaces.ITAProductInfoService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.BAProductInfoController" /> class.
            </summary>
            <param name="taProductInfoService">The ta product information service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.TAProductInfoController.Info(System.String)">
            <summary>
                获取产品详情 => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="productNo">产品编号</param>
            <returns>
                AvailableShareCount[int]: 可购买份额
                BillNo[string]: 商票编号
                ConsignmentAgreementName[string]:委托协议名称
                CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                Drawee[string]：付款方
                DraweeInfo[string]:付款方信息
                EndorseImageLink[string]: 票据大图链接
                EndorseImageThumbnailLink[string]: 票据缩略图链接
                EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                EnterpriseInfo[string]:融资方信息
                EnterpriseLicense[string]: 融资方执照号码
                EnterpriseName[string]: 企业名称
                ExtraYield[decimal]: 额外收益率
                FinancingSum[int]: 融资金额
                FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                GuaranteeMode[int]: 担保方式，10 => 银行保兑, 20 => 央企担保, 30 => 国企担保, 40 => 国有担保公司担保, 50 => 担保公司担保, 60 => 上市集团担保, 70 => 集团担保
                LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                MaxShareCount[int]: 单笔订单最大购买份数
                MinShareCount[int]: 单笔订单最小购买份数
                OnPreSale[bool]: 是否在预售状态
                OnSale[bool]: 是否在开售状态
                PledgeAgreementName[string]: 质押担保协议名称
                PaidPercent[int]: 已付款的百分比
                PaidShareCount[int]: 已付款份数
                PayingShareCount[int]: 付款中份数
                Period[int]: 项目周期
                PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                PreSale[bool]: 是否有提前购买设置
                PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                ProductIdentifier[string]: 产品唯一标识符
                ProductName[string]: 产品名称
                ProductNo[string]: 产品编号，银承产品以F开头
                ProductNumber[int]: 产品期数
                Repaid[bool]: 是否已经操作还款
                RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                Securedparty[string]: 担保方名称
                SecuredpartyInfo[string]: 担保方信息
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                SoldOut[bool]: 是否售罄
                SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                UnitPrice[int]: 每一份的单价
                Usage[string]: 融资用途
                ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                ValueDateString[string]: 备选的起息日显示文案
                Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.TAProductInfoController.Page(System.Int32)">
            <summary>
                获取产品信息列表（现在每页数量暂定为10个，只能指定页数，从1开始） => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="number">页码，从1开始</param>
            <returns>
                TotalPageCount[int]: 总页数
                TotalCount[int]: 总数据数量
                HasNextPage[bool]: 是否有下一页
                PageIndex[int]: 当前页码,从1开始
                PageSize[int]: 页面大小
                Products[array]: 产品信息列表
                - - AvailableShareCount[int]: 可购买份额
                - - BillNo[string]: 商票编号
                - - ConsignmentAgreementName[string]:委托协议名称
                - - CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                - - Drawee[string]：付款方
                - - DraweeInfo[string]:付款方信息
                - - EndorseImageLink[string]: 票据大图链接
                - - EndorseImageThumbnailLink[string]: 票据缩略图链接
                - - EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                - - EnterpriseInfo[string]:融资方信息
                - - EnterpriseLicense[string]: 融资方执照号码
                - - EnterpriseName[string]: 企业名称
                - - ExtraYield[decimal]: 额外收益率
                - - FinancingSum[int]: 融资金额
                - - FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                - - GuaranteeMode[int]: 担保方式，10 => 银行保兑, 20 => 央企担保, 30 => 国企担保, 40 => 国有担保公司担保, 50 => 担保公司担保, 60 => 上市集团担保, 70 => 集团担保
                - - LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                - - MaxShareCount[int]: 单笔订单最大购买份数
                - - MinShareCount[int]: 单笔订单最小购买份数
                - - OnPreSale[bool]: 是否在预售状态
                - - OnSale[bool]: 是否在开售状态
                - - PledgeAgreementName[string]: 质押担保协议名称
                - - PaidPercent[int]: 已付款的百分比
                - - PaidShareCount[int]: 已付款份数
                - - PayingShareCount[int]: 付款中份数
                - - Period[int]: 项目周期
                - - PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                - - PreSale[bool]: 是否有提前购买设置
                - - PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                - - ProductIdentifier[string]: 产品唯一标识符
                - - ProductName[string]: 产品名称
                - - ProductNo[string]: 产品编号，银承产品以F开头
                - - ProductNumber[int]: 产品期数
                - - Repaid[bool]: 是否已经操作还款
                - - RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                - - Securedparty[string]: 担保方名称
                - - SecuredpartyInfo[string]: 担保方信息
                - - ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                - - SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                - - ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                - - SoldOut[bool]: 是否售罄
                - - SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                - - StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                - - SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                - - UnitPrice[int]: 每一份的单价
                - - Usage[string]: 融资用途
                - - ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                - - ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                - - ValueDateString[string]: 备选的起息日显示文案
                - - Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.TAProductInfoController.Top">
            <summary>
                获取首个产品信息 => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <returns>
                AvailableShareCount[int]: 可购买份额
                BillNo[string]: 商票编号
                ConsignmentAgreementName[string]:委托协议名称
                CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                Drawee[string]：付款方
                DraweeInfo[string]:付款方信息
                EndorseImageLink[string]: 票据大图链接
                EndorseImageThumbnailLink[string]: 票据缩略图链接
                EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                EnterpriseInfo[string]:融资方信息
                EnterpriseLicense[string]: 融资方执照号码
                EnterpriseName[string]: 企业名称
                ExtraYield[decimal]: 额外收益率
                FinancingSum[int]: 融资金额
                FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                GuaranteeMode[int]: 担保方式，10 => 银行保兑, 20 => 央企担保, 30 => 国企担保, 40 => 国有担保公司担保, 50 => 担保公司担保, 60 => 上市集团担保, 70 => 集团担保
                LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                MaxShareCount[int]: 单笔订单最大购买份数
                MinShareCount[int]: 单笔订单最小购买份数
                OnPreSale[bool]: 是否在预售状态
                OnSale[bool]: 是否在开售状态
                PledgeAgreementName[string]: 质押担保协议名称
                PaidPercent[int]: 已付款的百分比
                PaidShareCount[int]: 已付款份数
                PayingShareCount[int]: 付款中份数
                Period[int]: 项目周期
                PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                PreSale[bool]: 是否有提前购买设置
                PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                ProductIdentifier[string]: 产品唯一标识符
                ProductName[string]: 产品名称
                ProductNo[string]: 产品编号，银承产品以F开头
                ProductNumber[int]: 产品期数
                Repaid[bool]: 是否已经操作还款
                RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                Securedparty[string]: 担保方名称
                SecuredpartyInfo[string]: 担保方信息
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                SoldOut[bool]: 是否售罄
                SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                UnitPrice[int]: 每一份的单价
                Usage[string]: 融资用途
                ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                ValueDateString[string]: 备选的起息日显示文案
                Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.TimelineController">
            <summary>
                TimelineController
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.TimelineController.#ctor(Cat.Domain.Orders.Services.Interfaces.ITimelineInfoService,Cat.Domain.Products.Services.Interfaces.IProductInfoService,Cat.Domain.Orders.Services.Interfaces.IOrderInfoService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.TimelineController" /> class.
            </summary>
            <param name="timelineInfoService">The timeline information service.</param>
            <param name="productInfoService">The product information service.</param>
            <param name="orderInfoService">The order information service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.TimelineController.CheckTimelineTimestamp(System.Int32,System.String)">
            <summary>
                时间线节点
            </summary>
            <param name="num">时间节点数量（1-15）</param>
            <param name="timestamp"> 时间线时间戳 </param>
            <returns>
                Updated[bool]: true => 时间线已经更新 false => 时间线没有更新
                Timestamp: 时间线时间戳，string类型，格式为yyyyMMddHHmm_s  (如果Updated => false,该值无意义)
                Items: 节点列表 (如果Updated => false,该值无意义)
                -- Identifier: 节点唯一标识，主要用于传递参数
                -- Interest: 利息，收益，预期收益
                -- Principal: 本金，投资金额
                -- Time: 节点时间
                -- Type: 节点类型
                -- -- 0, （起始节点）
                -- -- 10,（订单节点）
                -- -- 20,（今天节点）
                -- -- 30,（产品节点）
                -- -- 40 （终止节点）
                -- IsPast: 当前节点是否是过去节点，主要用于产品节点，即Type = 30的时间线节点，判断是否是已还款产品
                -- -- true: 过去节点，主要体现在产品已经还款，时间线已还款节点
                -- -- false: 未来节点，位置在今天节点之后，产品是否还款取决于Status参数
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.TimelineController.Current(System.Int32)">
            <summary>
                时间线今日的情况，即是时间线第一页应该显示的节点
            </summary>
            <param name="count">时间线节点数量（1-15）</param>
            <returns>
                Updated[bool]: true => 时间线已经更新 false => 时间线没有更新
                Timestamp: 时间线时间戳，string类型，格式为yyyyMMddHHmm_s
                Items: 节点列表
                -- Identifier: 节点唯一标识，主要用于传递参数
                -- Interest: 利息，收益，预期收益
                -- Principal: 本金，投资金额
                -- Time: 节点时间
                -- Type: 节点类型
                -- -- 0, （起始节点）
                -- -- 10,（订单节点）
                -- -- 20,（今天节点）
                -- -- 30,（产品节点）
                -- -- 40 （终止节点）
                -- IsPast: 当前节点是否是过去节点，主要用于产品节点，即Type = 30的时间线节点，判断是否是已还款产品
                -- -- true: 过去节点，主要体现在产品已经还款
                -- -- false: 未来节点，位置在今天节点之后，产品是否还款取决于Status参数
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.TimelineController.GetOrderInfo(System.String)">
            <summary>
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/M-GET-TimeLine-OrderInfo-orderNo.jpg"@}时间线订单详情 - M @{/a@}
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/APP-GET-TimeLine-OrderInfo-orderNo.jpg"@}时间线订单详情 - APP@{/a@}
            </summary>
            <param name="orderIdentifier">订单编号(string)</param>
            <returns>
                ExtraInterest[decimal]: 额外收益
                Interest[decimal]: 预期收益
                OrderIdentifier[string]: 订单唯一标识
                OrderNo[string]: 订单编号
                OrderTime[yyyy-MM-ddTHH:mm:ss]: 下单时间
                OrderType[int]: 订单类型 10 => 银票订单, 20 => 商票订单
                Period[int]: 投资周期
                Principal[decimal]: 订单金额
                ProductIdentifier[string]: 项目唯一标识
                ProductName[string]: 项目名称
                ProductNo[string]: 项目编号
                ProductNumber[int]: 项目期数
                ProductUnitPrice[decimal]: 项目的单价，即每份多少钱
                RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日
                SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息日期
                ShareCount[int]: 订单的购买份数
                ShowingStatus[int]: 项目状态  10 => 付款中, 20 => 待起息, 30 => 已起息, 40 => 已结息, 50 => 支付失败
                TotalAmount[decimal]: 订单的本息总额
                UseableItemCount[int]: 可用道具数 => -1:已用道具  0:无可用道具  1~999:有可用道具
                ValueDate[yyyy-MM-ddTHH:mm:ss]: 起息日期
                Yield[decimal]: 订单的预期收益率
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.TimelineController.GetRefundInfo(System.String)">
            <summary>
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/M-GET-TimeLine-RefundInfo-productIdentifier.jpg"@} 时间线还款日详情 - M @{/a@}
                @{a href="http://mdev.jinyinmao.com.cn/public/dev/APP-GET-TimeLine-RefundInfo-productIdentifier.jpg"@} 时间线还款日详情 - APP@{/a@}
            </summary>
            <param name="productIdentifier">产品编号(string)</param>
            <returns>
                Product: 产品信息
                -- AvailableShareCount[int]: 可购买份额
                -- CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                -- EndorseImageLink[string]: 抵押物大图链接
                -- EndorseImageThumbnailLink[string]: 抵押物缩略图链接
                -- EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                -- EnterpriseName[string]: 企业名称
                -- ExtraYield[deciaml]: 额外收益率
                -- FinancingSum[int]: 融资金额
                -- FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                -- LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                -- MaxShareCount[int]: 单笔订单最大购买份数
                -- MinShareCount[int]: 单笔订单最小购买份数
                -- OnPreSale[bool]: 是否在预售状态
                -- OnSale[bool]: 是否在开售状态
                -- PaidPercent[int]: 销售百分比
                -- PaidShareCount[int]: 已付款份数
                -- PayingShareCount[int]: 付款中份数
                -- Period[int]: 项目周期
                -- PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                -- PreSale[bool]: 是否有提前购买设置
                -- PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                -- ProductIdentifier[string]: 产品唯一标识符
                -- ProductName[string]: 产品名称
                -- ProductNo[string]: 产品编号
                -- ProductNumber[int]: 产品期数
                -- Repaid[bool]: 是否已经还款
                -- RepaymentDeadline[yyyy-MM-ddTHH:mm:ss]: 最迟还款日期
                -- ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                -- SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息时间
                -- ShowingStatus[int]: 显示状态 10 => 待售, 20 => 预售, 30 => 在售, 40 => 售罄, 50 => 结束
                -- SoldOut[bool]: 是否售罄
                -- SoldOutTime[yyyy-MM-ddTHH:mm:ss|""]: 售罄时间
                -- StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                -- SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                -- UnitPrice[int]: 每一份的单价
                -- ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                -- ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                -- ValueDateString[string]: 备选的起息日显示文案
                -- Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                Orders: 订单列表
                -- Interest: 收益
                -- OrderIdentifier: 订单唯一标识
                -- OrderNo: 订单号
                -- OrderTime: 下单时间
                -- Principal: 订单本金
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.TimelineController.Items(System.Int32,System.Int32,System.String)">
            <summary>
                时间线节点
            </summary>
            <param name="start">时间节点开始位置(负数即寻找过去节点，正数即寻找未来节点)</param>
            <param name="num">时间节点数量（1-15）</param>
            <param name="timestamp"> 时间线时间戳 </param>
            <returns>
                Updated[bool]: true => 时间线已经更新 false => 时间线没有更新
                Timestamp: 时间线时间戳，string类型，格式为yyyyMMddHHmm_s
                Items: 节点列表
                -- Identifier: 节点唯一标识，主要用于传递参数
                -- Interest: 利息，收益，预期收益
                -- Principal: 本金，投资金额
                -- Time: 节点时间
                -- Type: 节点类型
                -- -- 0, （起始节点）
                -- -- 10,（订单节点）
                -- -- 20,（今天节点）
                -- -- 30,（产品节点）
                -- -- 40 （终止节点）
                -- IsPast: 当时节点是否是过去节点，主要用于产品节点，即Type = 30的时间线节点，判断是否是已还款产品
                -- -- true: 过去节点，主要体现在产品已经还款
                -- -- false: 未来节点，位置在今天节点之后，产品是否还款取决于Status参数
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.AppController">
            <summary>
                AppController
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.AppController.#ctor(Cat.Domain.Meow.Services.Interfaces.IUpgradeService)">
            <summary>
                初始化升级服务实例 
            </summary>
            <param name="upgradeService">升级服务实例</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.AppController.Upgrade(nyanya.Meow.Models.ObtainRequest)">
            <summary>
                旧版获取升级信息
            </summary>
            <param name="request">
                channel: app市场
                source: 平台
                v: 当前版本号
            </param>
            <returns>
                data
                    Status: 升级状态 true|false
                    Url: 安装包url
                    Version: 当前版本号
                    Message: 升级提示信息
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.AppController.UpgradeEx(nyanya.Meow.Models.ObtainRequest)">
            <summary>
                新版获取升级信息
            </summary>
            <param name="request">
                channel: app市场
                source: 平台
                v: 当前版本号
            </param>
            <returns>
                Status: 升级状态 0|1|2
                Url: 安装包url
                Version: 当前版本号
                Message: 升级提示信息
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.AppController.Scan">
            <summary>
                用户扫描二维码
            </summary>
            <returns>
                iphone跳转到市场
                其他跳转到m版
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.UserController">
            <summary>
                UserController
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.UserController.commandBus">
            <summary>
                The command bus
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.UserController.eventBus">
            <summary>
                The event bus
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.UserController.userInfoService">
            <summary>
                The user information service
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.UserController.userService">
            <summary>
                The user service
            </summary>
        </member>
        <member name="F:nyanya.Meow.Controllers.UserController.veriCodeService">
            <summary>
                The veri code service
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.#ctor(Domian.Bus.ICommandBus,Cat.Domain.Auth.Services.Interfaces.IVeriCodeService,Cat.Domain.Users.Services.Interfaces.IExactUserInfoService,Cat.Domain.Users.Services.Interfaces.IUserService,Domian.Bus.IEventBus)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.UserController" /> class.
            </summary>
            <param name="commandBus">The command bus.</param>
            <param name="veriCodeService">The verification code service.</param>
            <param name="userInfoService">The user information service.</param>
            <param name="userService">The user service.</param>
            <param name="eventBus">The event bus.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.AddBankCard(nyanya.Meow.Models.AddBankCardRequest)">
            <summary>
                添加银行卡
            </summary>
            <param name="request">BankCardNo[string]: 银行卡号（15-19位） BankName[string]: 银行名称 CityName[string]: 开户行所在城市名称</param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                No Content
                @{h2@} HttpStatusCode:400 @{/h2@}
                "无法添加银行卡"
                "请先开通快捷支付功能"
                "最多只能绑定10张银行卡。"
                "此卡片已经被绑定"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.AddBankCardStatus(nyanya.Meow.Models.AddBankCardStatusRequest)">
            <summary>
                获取银行卡绑定状态
            </summary>
            <param name="request">BankCardNo[string]: 银行卡号（15-19位）</param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                Status: 绑卡状态。0是失败；1是成功；2是绑卡中
                Message: 绑卡失败的原因。
                @{h2@} HttpStatusCode:400 @{/h4@}
                "找不到银行卡"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.CheckCellphone(System.String)">
            <summary>
                手机号是否已注册
            </summary>
            <param name="cellphone">手机号[必填]</param>
            <returns>
                Result[bool]：手机号是否存在 true or false
                UserType[int]：用户类型 10金银猫用户 1兴业用户 11金银猫和兴业
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.ResetLoginPassword(nyanya.Meow.Models.ResetPasswordRequest)">
            <summary>
                重置登录密码
            </summary>
            <param name="request">
                Password: 用户设置的密码（6-18位）
                Token: 验证码口令
            </param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                No Content
                @{h2@} HttpStatusCode:400 @{/h2@}
                "请输入正确的验证码"
                "该手机号不存在或手机号错误"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.ResetPaymentPassword(nyanya.Meow.Models.ResetPaymentPasswordRequest)">
            <summary>
                重置支付密码
            </summary>
            <param name="request">
                Password: 用户设置的密码（6-18位）
                Token: 验证码口令
                CredentialNo: 用户证件号
                BankCardNo: 默认银行卡卡号
            </param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                No Content
                @{h2@} HttpStatusCode:400 @{/h2@}
                "请输入正确的验证码"
                "请先开通快捷支付。"
                "您输入的信息错误！请重新输入"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SetDefaultBankCard(System.String)">
            <summary>
                设置默认银行卡
            </summary>
            <param name="bankCardNo">BankCardNo[string]: 银行卡号（15-19位）</param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                Empty Body
                @{h2@} HttpStatusCode: 400 @{/h2@}
                "银行卡信息错误"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SetPaymentPassword(nyanya.Meow.Models.SetPaymentPasswordRequest)">
            <summary>
                设定支付密码（不能与登录密码一致）
            </summary>
            <param name="request">Password[string]: 支付密码</param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                Empty Body
                @{h2@} HttpStatusCode:400 @{/h2@}
                "密码格式不正确"
                "支付密码不能与登录密码一致"
                "已设置支付密码"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SignIn(nyanya.Meow.Models.SignInRequest)">
            <summary>
                登录
            </summary>
            <param name="request">
                Name[必填]: 用户名，现在就是手机号码
                Password[必填]: 用户设置的密码（6-18位）
            </param>
            <returns>
                RemainCount: 今天剩余尝试次数，每天（自然天）只能登录失败5次，重置登录密码后可以重置失败次数
                Successful: 登录结果
                UserExist: 用户是否存在
                Lock: 账户是否被锁定
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SignOut">
            <summary>
                登出
            </summary>
            <returns>
                200
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SignUp(nyanya.Meow.Models.SignUpRequest)">
            <summary>
                注册
            </summary>
            <param name="request">
                Password[string]: 用户设置的密码（6-18位）
                Token[string]: 验证码口令
                Code[string]: 识别码
                ClientType[long]: 客户端标识(推广相关)
                ContractId[long]: 活动标识(推广相关)
                FlgMoreI1[long]: FlgMoreI1(推广相关)
                FlgMoreI2[long]: FlgMoreI2(推广相关)
                FlgMoreS1[string]: FlgMoreS1(推广相关)
                FlgMoreS2[string]: FlgMoreS2(推广相关)
                InviteBy[string]: 邀请码(推广相关)
            </param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                No Content
                @{h2@} HttpStatusCode:400 @{/h2@}
                "请输入正确的验证码"
                "此号码已注册，请选择登录，如果您忘记密码，请选择重置密码"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SignUpPayment(nyanya.Meow.Models.SignUpPaymentRequest)">
            <summary>
                开通快捷支付，并且绑定第一张借记卡
            </summary>
            <param name="request">
                BankCardNo[string]: 银行卡号（15-19位）
                BankName[string]: 银行名称
                CityName[string]: 开户行所在城市名称
                Credential[int]: 证件类型 0 =&gt; 身份证, 1 =&gt; 护照, 2 =&gt; 台湾, 3 =&gt; 军官
                CredentialNo[string]: 证件号码
                RealName[string]: 真实姓名
                ClientType[long]: 客户端标识(推广相关)
                FlgMoreI1[long]: FlgMoreI1(推广相关)
                FlgMoreI2[long]: FlgMoreI2(推广相关)
                FlgMoreS1[string]: FlgMoreS1(推广相关)
                FlgMoreS2[string]: FlgMoreS2(推广相关)
            </param>
            <returns>
                @{h2@} HttpStatusCode:200 @{/h2@}
                Empty Body
                @{h2@} HttpStatusCode: 400 @{/h2@}
                "无法开通快捷支付功能"
                "请先设定支付密码"
                "已经开通快捷支付功能"
                "正在开通快捷支付功能，请耐心等待"
                "该银行卡已经被绑定"
                "该证件已经被绑定"
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.BuildAddBankCardCommand(nyanya.Meow.Models.AddBankCardRequest,Cat.Domain.Users.ReadModels.UserInfo)">
            <summary>
                Builds the add bank card command.
            </summary>
            <param name="request">The request.</param>
            <param name="info">The information.</param>
            <returns></returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.BuildSignUpPaymentCommand(nyanya.Meow.Models.SignUpPaymentRequest,Cat.Domain.Users.ReadModels.UserInfo)">
            <summary>
                Builds the sign up payment command.
            </summary>
            <param name="request">The request.</param>
            <param name="info">The information.</param>
            <returns></returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SetCookieInHttpContext(System.String,System.String,System.DateTime,System.String,System.String,System.Boolean)">
            <summary>
                Sets the cookie in HTTP context.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="expires">The expires.</param>
            <param name="domain">The domain.</param>
            <param name="path">The path.</param>
            <param name="secure">if set to <c>true</c> [secure].</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SetSignInAtOld(System.String)">
            <summary>
                Sets the sign in at old.
            </summary>
            <param name="userIdentifier">The user identifier.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserController.SignInAsync(System.String,System.String)">
            <summary>
                Signs the in asynchronous.
            </summary>
            <param name="loginName">Name of the login.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.UserInfoController">
            <summary>
                用户信息
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserInfoController.#ctor(Cat.Domain.Users.Services.Interfaces.IUserInfoService,Cat.Domain.Orders.Services.Interfaces.IOrderInfoService,Xingye.Domain.Orders.Services.Interfaces.IOrderInfoService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.UserInfoController" /> class.
            </summary>
            <param name="userInfoService">The user information service.</param>
            <param name="orderInfoService">The order information service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserInfoController.BankCards">
            <summary>
                获取用户银行卡信息
            </summary>
            <returns>
                BankCardNo[string]: 银行卡号
                CardBankName[string]: 银行名称
                IsDefault[bool]: 是否是默认银行卡
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserInfoController.GetSettlings">
            <summary>
                获取即将结息的产品信息(合并金银猫、兴业、富滇）
            </summary>
            <returns>
                - - ExtraInterest[decimal]：额外收益
                - - Interest[decimal]: 收益
                - - Principal[decimal]: 本金
                - - ProductIdentifier[decimal]: 产品唯一标识
                - - ProductName[decimal]: 产品名称
                - - ProductNo[string]: 产品编号
                - - ProductNumber[int]: 产品期数
                - - ProductType[int]: 产品类型，10 => 银票、20 => 商票
                - - SettleDate[yyyy-MM-ddTHH:mm:ss]: 结息日期
                - - ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品，1 => 其它产品
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserInfoController.GetUserInfoIndex">
            <summary>
                获取用户账户信息（合并金银猫、兴业、富滇）
            </summary>
            <returns>
                TotalInterest[decimal]: 总收益
                ExpectedInterest[decimal]: 预期收益
                InvestingPrincipal[decimal]: 在投金额
                IncomePerMinute[decimal]: 以分钟为单位的赚钱速度
                DefeatedPercent[int]: 打败的百分比
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserInfoController.Info">
            <summary>
                获取用户信息
            </summary>
            <returns>
                BankCardNo[string]: 默认银行卡号
                BankCardsCount[int]: 银行卡数量
                CardBankName[string]: 默认银行卡名称
                Cellphone[string]: 手机
                Credential[int]: 证件 -1 => 无，0 => 身份证，1 => 护照，2 => 台湾，3 => 军人
                CredentialNo[string]: 证件编号 (已加码，可以直接显示)
                HasDefaultBankCard[bool]: 用户是否绑定了默认银行卡,如果绑定了，一定是认证成功了
                HasSetPaymentPassword[bool]: 是否设定了支付密码
                HasYSBInfo[bool]: 是否有银生宝的信息
                LoginName[string]: 登录名
                RealName[string]: 用户真实姓名
                SignUpTime[string]: 用户注册时间
                Verified[bool]: 用户是否通过实名认证，也表示是否开通了支付功能，也表示首张银行卡是否绑定成功
                Verifing[bool]: 用户是否正在进行实名认证
                YSBIdCard[string]: 银生宝认证的真实身份证号
                YSBRealName[string]: 银生宝的认证的真实姓名
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.UserInfoController.LoginInfo">
            <summary>
                获取用户登录信息
            </summary>
            <returns>
                Valid[bool]: 用户Cookie是否有效
                LoginName[string]: 用户的登录名
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.UpgradeController">
            <summary>
                UpgradeController
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.UpgradeController.#ctor(Cat.Domain.Meow.Services.Interfaces.IUpgradeService)">
            <summary>
                初始化升级服务实例 
            </summary>
            <param name="upgradeService">升级服务实例</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.UpgradeController.Obtain(nyanya.Meow.Models.ObtainRequest)">
            <summary>
                获取升级信息
            </summary>
            <param name="request">
                channel: app市场
                source: 平台
                v: 当前版本号
            </param>
            <returns>
                Status: 升级状态
                Url: 安装包url
                Version: 当前版本号
                Message: 升级提示信息
            </returns>
        </member>
        <member name="T:nyanya.Meow.Controllers.VeriCodesController">
            <summary>
                手机验证码
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.VeriCodesController.#ctor(Cat.Domain.Auth.Services.Interfaces.IVeriCodeService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.VeriCodesController" /> class.
            </summary>
            <param name="veriCodeService">The veri code service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.VeriCodesController.Send(nyanya.Meow.Models.VeriCodes.SendVeriCodeTokenRequest)">
            <summary>
                发送短信验证码 -- 一天(自然天)同种类型的验证码发送次数由数据库控制（包括验证成功和验证失败）
            </summary>
            <param name="request">
                验证码发送请求：
                Cellphone[必填]: 手机号码
                Token[]:  验证用令牌
                Type[必填]: 验证码用途类型。10 => 注册，20 => 重置登录密码，30 => 重置支付密码
            </param>
            <returns>
                RemainCount: 今天剩余发送次数，若为-1或者0，则今天不能再次发送该类型验证码
                Successful: 本次发送结果
            </returns>
            <remarks>
                2014-07-20 13:05 测试 by SiqiLu
            </remarks>
        </member>
        <member name="M:nyanya.Meow.Controllers.VeriCodesController.SendGraphic(System.Int32)">
            <summary>
                发送图形验证码
            </summary>
            <param name="width">width[必填]:  客户端图片宽度</param>
            <returns>
                responseMsg: 验证码图片请求
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.VeriCodesController.VerifyCode(nyanya.Meow.Models.VerifyVeriCodeRequest)">
            <summary>
                验证验证码是否正确 -- 一个验证码只能验证失败3次，并且只能使用一次，验证码有效期为15分钟
            </summary>
            <param name="request">
                验证码验证请求：
                Cellphone[必填]: 手机号码
                Code[必填]: 验证码，主要用于验证
                Type[必填]: 验证码用途类型。10 => 注册，20 => 重置登录密码，30 => 重置支付密码
            </param>
            <returns>
                RemainCount: 剩余验证次数，若为-1，则该验证码已失效。验证码过期等其他非异常情况也会返回-1。若为0,则该验证码失效，不能再进行验证。
                Successful: 本次验证结果
                Token: 验证码口令，如果验证码验证失败，则为空
            </returns>
            ///
            <remarks>
                2014-07-20 13:05 测试 by SiqiLu
            </remarks>
        </member>
        <member name="M:nyanya.Meow.Controllers.VeriCodesController.VerifyGraphicCode(nyanya.Meow.Models.VeriCodes.VerifyVeriCodePhoneRequest)">
            <summary>
                验证图片验证码是否正确
            </summary>
            <param name="request">
                验证码验证请求：
                Cellphone[必填]: 手机号码
                Result[必填]: 验证码，主要用于验证
            </param>
            <returns>
                RemainCount: 剩余验证次数，若为-1，则该验证码已失效。验证码过期等其他非异常情况也会返回-1。若为0,则该验证码失效，不能再进行验证。
                Successful: 本次验证结果
                Token: 验证码口令，如果验证码验证失败，则为空
            </returns>
            ///
            <remarks>
                2014-07-20 13:05 测试 by SiqiLu
            </remarks>
        </member>
        <member name="T:nyanya.Meow.Controllers.ZCBProductInfoController">
            <summary>
                资产包产品信息
            </summary>
        </member>
        <member name="M:nyanya.Meow.Controllers.ZCBProductInfoController.#ctor(Cat.Domain.Products.Services.Interfaces.IZCBProductInfoService)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Controllers.ZCBProductInfoController" /> class.
            </summary>
            <param name="zcbProductInfoService">The ba product information service.</param>
        </member>
        <member name="M:nyanya.Meow.Controllers.ZCBProductInfoController.Index(System.Int32)">
            <summary>
                获取首页显示的产品信息（{count}产品数量{category}产品分类） => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="count">产品数量(最大值为10)</param>
            <returns>
                AvailableShareCount[int]: 可购买份额
                EnableSale[int]: 是否可售 0 => 否 1 => 是
                TotalSaleCount[int]：累计购买份额
                TotalInterest[decimal]：累计收益
                ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品
                CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                FinancingSum[int]: 融资金额
                FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                MaxShareCount[int]: 单笔订单最大购买份数
                MinShareCount[int]: 单笔订单最小购买份数
                OnPreSale[bool]: 是否在预售状态
                OnSale[bool]: 是否在开售状态
                PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                PreSale[bool]: 是否有提前购买设置
                PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                ProductIdentifier[string]: 产品唯一标识符
                ProductName[string]: 产品名称
                ProductNo[string]: 产品编号，银承产品以F开头
                ProductNumber[int]: 产品期数
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                ShowingStatus[int]: 显示状态 10 => 待售, 30 => 在售, 50 => 结束
                StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                UnitPrice[int]: 每一份的单价
                ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                ValueDateString[string]: 备选的起息日显示文案
                Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                ConsignmentAgreementName[string]：授权委托书名称
                PledgeAgreementName[string]：投资协议名称
                PaidPercent[int]: 销售百分比
                PaidShareCount[int]: 已付款份数
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ZCBProductInfoController.Info(System.String)">
            <summary>
                获取产品详情 => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="productNo">产品编号</param>
            <returns>
                AvailableShareCount[int]: 可购买份额
                EnableSale[int]: 是否可售 0 => 否 1 => 是
                TotalSaleCount[int]：累计购买份额
                TotalInterest[decimal]：累计收益
                ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品
                CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                FinancingSum[int]: 融资金额
                FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                MaxShareCount[int]: 单笔订单最大购买份数
                MinShareCount[int]: 单笔订单最小购买份数
                OnPreSale[bool]: 是否在预售状态
                OnSale[bool]: 是否在开售状态
                PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                PreSale[bool]: 是否有提前购买设置
                PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                ProductIdentifier[string]: 产品唯一标识符
                ProductName[string]: 产品名称
                ProductNo[string]: 产品编号，银承产品以F开头
                ProductNumber[int]: 产品期数
                ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                ShowingStatus[int]: 显示状态 10 => 待售, 30 => 在售,50 => 结束
                StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                UnitPrice[int]: 每一份的单价
                ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                ValueDateString[string]: 备选的起息日显示文案
                Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                ConsignmentAgreementName[string]：授权委托书名称
                PledgeAgreementName[string]：投资协议名称
                PaidPercent[int]: 销售百分比
                PaidShareCount[int]: 已付款份数
            </returns>
        </member>
        <member name="M:nyanya.Meow.Controllers.ZCBProductInfoController.Page(System.Int32)">
            <summary>
                获取产品信息列表（现在每页数量暂定为10个，只能指定页数，从1开始） => Notice => 字段ShowingStatus已经在服务端计算出了显示需要的状态
            </summary>
            <param name="number">页码，从1开始</param>
            <returns>
                TotalPageCount[int]: 总页数
                TotalCount[int]: 总数据数量
                HasNextPage[bool]: 是否有下一页
                PageIndex[int]: 当前页码,从1开始
                PageSize[int]: 页面大小
                Products[array]: 产品信息列表
                - - AvailableShareCount[int]: 可购买份额
                - - EnableSale[int]: 是否可售 0 => 否 1 => 是
                - - TotalSaleCount[int]：累计购买份额
                - - TotalInterest[decimal]：累计收益
                - - ProductCategory[int]: 产品分类 10 => 金银猫产品，20 => 富滇产品
                - - CurrentValueDate[yyyy-MM-ddTHH:mm:ss]: 计算出的当时购买的起息日期
                - - EndSellTime[yyyy-MM-ddTHH:mm:ss]: 售卖结束时间
                - - FinancingSum[int]: 融资金额
                - - FinancingSumCount[int]: 融资总份数,使用该字段显示产品信息
                - - LaunchTime[yyyy-MM-ddTHH:mm:ss]: 产品上线时间
                - - MaxShareCount[int]: 单笔订单最大购买份数
                - - MinShareCount[int]: 单笔订单最小购买份数
                - - OnPreSale[bool]: 是否在预售状态
                - - OnSale[bool]: 是否在开售状态
                - - PreEndSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买结束时间
                - - PreSale[bool]: 是否有提前购买设置
                - - PreStartSellTime[yyyy-MM-ddTHH:mm:ss]: 提前购买开始时间
                - - ProductIdentifier[string]: 产品唯一标识符
                - - ProductName[string]: 产品名称
                - - ProductNo[string]: 产品编号，银承产品以F开头
                - - ProductNumber[int]: 产品期数
                - - ServerTime[yyyy-MM-ddTHH:mm:ss]: 服务器当前时间
                - - ShowingStatus[int]: 显示状态 10 => 待售, 30 => 在售, 50 => 结束
                - - StartSellTime[yyyy-MM-ddTHH:mm:ss]: 开售时间
                - - SumShareCount[int]: 总销售份数,计算使用,前端计算暂时不会涉及到
                - - UnitPrice[int]: 每一份的单价
                - - ValueDate[yyyy-MM-ddTHH:mm:ss|""]: 固定起息日期
                - - ValueDateMode[int]: 起息方式 10 => 购买当天起息, 20 => 下一日起息, 30 => 指定日期起息（此时ValueDate一定有值）
                - - ValueDateString[string]: 备选的起息日显示文案
                - - Yield[decimal]: 收益率（保留位数为最小有效位数，即可能是7.3或者7.34）
                - - ConsignmentAgreementName[string]：授权委托书名称
                - - PledgeAgreementName[string]：投资协议名称
                - - PaidPercent[int]: 销售百分比
                - - PaidShareCount[int]: 已付款份数
            </returns>
        </member>
        <member name="T:nyanya.Meow.Filters.TokenAuthorizeAttribute">
            <summary>
                TokenAuthorizeAttribute
            </summary>
        </member>
        <member name="F:nyanya.Meow.Filters.TokenAuthorizeAttribute.checkPermission">
            <summary>
                The check permission
            </summary>
        </member>
        <member name="F:nyanya.Meow.Filters.TokenAuthorizeAttribute.roles">
            <summary>
                The roles
            </summary>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Filters.TokenAuthorizeAttribute" /> class.
            </summary>
            <param name="refreshToken">if set to <c>true</c> [refresh token].</param>
        </member>
        <member name="P:nyanya.Meow.Filters.TokenAuthorizeAttribute.AllowLocal">
            <summary>
                Gets or sets a value indicating whether [allow local].
            </summary>
            <value><c>true</c> if [allow local]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:nyanya.Meow.Filters.TokenAuthorizeAttribute.Roles">
            <summary>
                Gets or sets the roles.
            </summary>
            <value>The roles.</value>
        </member>
        <member name="P:nyanya.Meow.Filters.TokenAuthorizeAttribute.PermissibleUsers">
            <summary>
                Gets or sets the permissible users.
            </summary>
            <value>The permissible users.</value>
        </member>
        <member name="P:nyanya.Meow.Filters.TokenAuthorizeAttribute.RefreshToken">
            <summary>
                Gets or sets a value indicating whether [refresh token].
            </summary>
            <value><c>true</c> if [refresh token]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:nyanya.Meow.Filters.TokenAuthorizeAttribute.UserName">
            <summary>
                Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
                Occurs before the action method is invoked.
            </summary>
            <param name="actionContext">The action context.</param>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.ConfigrateAuthorization">
            <summary>
                Configrates the authorization.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.FormatErrorMessage">
            <summary>
                Formats the error message.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
                Processes requests that fail authorization. This default implementation creates a new
                response with the Unauthorized status code. Override this method to provide your own
                handling for unauthorized requests.
            </summary>
            <param name="actionContext">The context.</param>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.IpIsAuthorized(System.Net.Http.HttpRequestMessage)">
            <summary>
                Determines whether the client ip is authorized.
            </summary>
            <param name="request">The request.</param>
            <returns>
                bool
            </returns>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.IsAuthorized">
            <summary>
                Determines whether this instance is authorized.
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:nyanya.Meow.Filters.TokenAuthorizeAttribute.IsValid(System.Web.Http.Controllers.HttpActionContext,System.String@)">
            <summary>
                Determines whether the specified action context is valid.
            </summary>
            <param name="actionContext">The action context.</param>
            <param name="newToken">The new token.</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">
                actionContext;actionContext can not be null
            </exception>
        </member>
        <member name="M:nyanya.Meow.WebApiApplication.Init">
            <summary>
            开启Session
            </summary>
        </member>
        <member name="T:nyanya.Meow.Helper.BankCardHelper">
            <summary>
                BankCardHelper
            </summary>
        </member>
        <member name="M:nyanya.Meow.Helper.BankCardHelper.CheckDailyLimit(System.String,System.Decimal)">
            <summary>
                Checks the daily limit.
            </summary>
            <param name="bankName">Name of the bank.</param>
            <param name="amount">The amount.</param>
            <returns></returns>
        </member>
        <member name="T:nyanya.Meow.Models.FeedbackRequest">
            <summary>
                反馈请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.FeedbackRequest.Content">
            <summary>
                反馈内容
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.InvestingRequest">
            <summary>
                投资下单请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.InvestingRequest.ActivityNo">
            <summary>
                Gets or sets the Activity no.
            </summary>
            <value>
                The Activity no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.InvestingRequest.BankCardNo">
            <summary>
                Gets or sets the bank card no.
            </summary>
            <value>
                The bank card no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.InvestingRequest.Count">
            <summary>
                Gets or sets the count.
            </summary>
            <value>
                The count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.InvestingRequest.PaymentPassword">
            <summary>
                Gets or sets the bank card no.
            </summary>
            <value>
                The bank card no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.InvestingRequest.ProductNo">
            <summary>
                Gets or sets the product no.
            </summary>
            <value>
                The product no.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.ItemConsumeRequest">
            <summary>
                ItemConsumeRequest
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ItemConsumeRequest.ItemId">
            <summary>
                Gets or sets the item identifier.
            </summary>
            <value>
                The item identifier.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ItemConsumeRequest.OrderIdentifier">
            <summary>
                Gets or sets the order identifier.
            </summary>
            <value>
                The order identifier.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.ItemDto">
            <summary>
                ItemDto
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ItemDto.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The description.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ItemDto.Expires">
            <summary>
                Gets or sets the expires.
            </summary>
            <value>
                The expires.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ItemDto.HasExpired">
            <summary>
                Gets a value indicating whether this instance has expired.
            </summary>
            <value>
                <c>true</c> if this instance has expired; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ItemDto.Id">
            <summary>
                Gets or sets the identifier.
            </summary>
            <value>
                The identifier.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ItemDto.ImageSrc">
            <summary>
                Gets or sets the image source.
            </summary>
            <value>
                The image source.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ItemDto.Title">
            <summary>
                Gets or sets the title.
            </summary>
            <value>
                The title.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.UseableItemsRequest">
            <summary>
                UseableItemsRequest
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UseableItemsRequest.OrderIdentifier">
            <summary>
                Gets or sets the order identifier.  订单标识
            </summary>
            <value>
                The order identifier.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.UseableItemsRequest.PageIndex">
            <summary>
                查询的页数，从1开始计数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UseableItemsRequest.PageSize">
            <summary>
                一页数据数量
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.Luckhub.BuildLuckRecordResponse">
            <summary>
            生成抽奖记录响应
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.Luckhub.BuildLuckRecordResponse.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.Luckhub.BuildLuckRecordResponse.AwardLevel">
            <summary>
            奖品等级
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.Luckhub.LuckUserRequest.Token">
            <summary>
                验证手机用TOKEN
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.Luckhub.UserGetLuckResponse">
             <summary>
            
             </summary>
        </member>
        <member name="T:nyanya.Meow.Models.Luckhub.UserLuckStatuResponse">
            <summary>
            用户抽奖活动响应
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.Luckhub.UserLuckStatuResponse.Status">
            <summary>
            奖品等级
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.Luckhub.UserLuckStatusSumResponse">
             <summary>
            
             </summary>
        </member>
        <member name="P:nyanya.Meow.Models.Luckhub.UserLuckStatusSumResponse.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.Luckhub.UserLuckStatusSumResponse.UserLuckStatuResponses">
             <summary>
            
             </summary>
        </member>
        <member name="T:nyanya.Meow.Models.CanConsumeItemRequestModel">
            <summary>
                CanConsumeItemRequestModel
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.CanConsumeItemRequestModel.ItemId">
            <summary>
                Gets or sets the item id.
            </summary>
            <value>
                The item id.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.CanConsumeItemRequestModel.PageIndex">
            <summary>
                查询的页数，从1开始计数
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.CanConsumeItemRequestModel.PageSize">
            <summary>
                一页数据数量
            </summary>
            <value>
                The size of the page.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.OrderInfoResponse">
            <summary>
                订单信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.BankCardCity">
            <summary>
                银行卡开户地
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.BankCardCityName">
            <summary>
                开户行城市名
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.BankCardNo">
            <summary>
                银行卡号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.BankCardProvinceName">
            <summary>
                开户行省份名
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.BankName">
            <summary>
                银行名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ConsignmentAgreementName">
            <summary>
                委托协议名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.EndorseImageLink">
            <summary>
                质押物大图链接
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.EndorseImageThumbnailLink">
            <summary>
                质押物缩略图链接
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ExtraInterest">
            <summary>
                额外收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.HasResult">
            <summary>
                是否已经有支付结果
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.Interest">
            <summary>
                收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.InvestorCellphone">
            <summary>
                投资者手机号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.InvestorCredential">
            <summary>
                投资者证件类型
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.InvestorCredentialNo">
            <summary>
                投资者证件编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.InvestorRealName">
            <summary>
                投资者真实姓名
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.IsPaid">
            <summary>
                是否支付成功
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.Message">
            <summary>
                提示信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.OrderIdentifier">
            <summary>
                订单唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.OrderNo">
            <summary>
                订单编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.OrderTime">
            <summary>
                下单时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.OrderType">
            <summary>
                订单类型
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.PaymentInfoTransDesc">
            <summary>
                Gets or sets the payment information trans desc.
            </summary>
            <value>
                The payment information trans desc.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.Period">
            <summary>
                投资周期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.PledgeAgreementName">
            <summary>
                质押借款协议名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.Principal">
            <summary>
                订单本金
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ProductIdentifier">
            <summary>
                项目唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ProductName">
            <summary>
                项目名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ProductNo">
            <summary>
                项目编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ProductNumber">
            <summary>
                项目期数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ProductUnitPrice">
            <summary>
                项目的单价，即每份多少钱
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.RepaymentDeadline">
            <summary>
                Gets or sets the repayment deadline.
            </summary>
            <value>
                The repayment deadline.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ResultTime">
            <summary>
                支付清算时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.SettleDate">
            <summary>
                结息日期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ShareCount">
            <summary>
                订单的购买份数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ShowingStatus">
            <summary>
                订单的显示状态
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.TotalAmount">
            <summary>
                订单的本息总额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.UseableItemCount">
            <summary>
                可用道具数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.UserIdentifier">
            <summary>
                用户唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ValueDate">
            <summary>
                起息日期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.Yield">
            <summary>
                订单的项目收益率
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.IsRepaid">
            <summary>
                是否已操作还款
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderInfoResponse.ServerTime">
            <summary>
                Gets or sets the server time.
            </summary>
            <value>
                The server time.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.OrderListItem">
            <summary>
                OrderListItem
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ExtraInterest">
            <summary>
                额外收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.Interest">
            <summary>
                预期收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.Message">
            <summary>
                提示信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.OrderIdentifier">
            <summary>
                订单唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.OrderNo">
            <summary>
                订单编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.OrderTime">
            <summary>
                下单时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.Principal">
            <summary>
                订单本金
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ProductIdentifier">
            <summary>
                项目唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ProductName">
            <summary>
                项目名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ProductNo">
            <summary>
                项目编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ProductNumber">
            <summary>
                项目期数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.SettleDate">
            <summary>
                结息日期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ShareCount">
            <summary>
                订单的购买份数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ShowingStatus">
            <summary>
                订单的显示状态
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.TotalAmount">
            <summary>
                订单的本息总额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.UseableItemCount">
            <summary>
                可用道具数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ValueDate">
            <summary>
                起息日期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.Yield">
            <summary>
                订单的预期收益率
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.IsRepaid">
            <summary>
                是否已操作还款
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.ServerTime">
            <summary>
                Gets or sets the server time.
            </summary>
            <value>
                The server time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListItem.RepaymentDeadline">
            <summary>
                Gets or sets the repayment deadline.
            </summary>
            <value>
                The repayment deadline.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.OrderListResponse">
            <summary>
                订单列表
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.OrderListResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.OrderListResponse" /> class.
                Only for document.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.OrderListResponse.#ctor(Domian.DTO.IPaginatedDto{Cat.Domain.Orders.ReadModels.OrderInfo})">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.OrderListResponse" /> class.
            </summary>
            <param name="model">The orders.</param>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListResponse.HasNextPage">
            <summary>
                Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
                <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListResponse.Orders">
            <summary>
                Gets or sets the products.
            </summary>
            <value>
                The products.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListResponse.PageIndex">
            <summary>
                Gets or sets the index of the page.
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListResponse.PageSize">
            <summary>
                页面大小
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListResponse.TotalCount">
            <summary>
                总数据数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.OrderListResponse.TotalPageCount">
            <summary>
                Gets or sets the total page count.
            </summary>
            <value>
                The total page count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.OrderNoResponse.OrderNo">
            <summary>
            订单编号
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.OrderShowingStatus">
            <summary>
                OrderShowingStatus
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.OrderShowingStatus.Paying">
            <summary>
                付款中
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.OrderShowingStatus.WaitForInterest">
            <summary>
                待起息
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.OrderShowingStatus.Interesting">
            <summary>
                已起息
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.OrderShowingStatus.Interested">
            <summary>
                已结息
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.OrderShowingStatus.Failed">
            <summary>
                支付失败
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.RedeemParametersResponse">
            <summary>
            RedeemParametersResponse
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.RedeemParametersResponse.#ctor">
            <summary>
            RedeemParametersResponse
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.RedeemParametersResponse.#ctor(System.Int32,System.Int32,System.Decimal)">
            <summary>
            RedeemParametersResponse
            </summary>
            <param name="redeemCount"></param>
            <param name="todayIsInvesting"></param>
            <param name="investingAndUnRedeemPrincipal"></param>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemParametersResponse.RedeemCount">
            <summary>
            用户当日已提现次数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemParametersResponse.TodayIsInvesting">
            <summary>
            今天是否有投资产品 10是 20否 
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemParametersResponse.InvestingAndUnRedeemPrincipal">
            <summary>
            今天投资金额和还未处理的提现金额的总和
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.RedeemPrincipalRequest">
            <summary>
                赎回本金请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemPrincipalRequest.ProductNo">
            <summary>
               产品编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemPrincipalRequest.BankCardNo">
            <summary>
                Gets or sets the bank card no.
            </summary>
            <value>
                The bank card no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemPrincipalRequest.RedeemPrincipal">
            <summary>
                赎回金额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemPrincipalRequest.PaymentPassword">
            <summary>
                支付密码
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.RedeemRangeResponse">
            <summary>
                取现额度
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemRangeResponse.RedeemRangePercent">
            <summary>
                取现额度百分比
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemRangeResponse.CanRedeemAmount">
            <summary>
                可取现额度
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RedeemRangeResponse.RedeemNum">
            <summary>
                用户当天已取现次数
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.UserActivityResponse">
            <summary>
            用户活动响应
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserActivityResponse.Status">
            <summary>
            活动状态
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserActivityResponse.ExtraInterest">
            <summary>
            额外收益
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ZCBBillListResponse">
            <summary>
                资产包认购/提现记录列表
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.ZCBBillListResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.OrderListResponse" /> class.
                Only for document.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.ZCBBillListResponse.#ctor(Domian.DTO.IPaginatedDto{Cat.Domain.Orders.Models.ZCBBill})">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.OrderListResponse" /> class.
            </summary>
            <param name="model">The orders.</param>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillListResponse.HasNextPage">
            <summary>
                Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
                <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillListResponse.ZCBBills">
            <summary>
                Gets or sets the products.
            </summary>
            <value>
                The products.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillListResponse.PageIndex">
            <summary>
                Gets or sets the index of the page.
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillListResponse.PageSize">
            <summary>
                页面大小
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillListResponse.TotalCount">
            <summary>
                总数据数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillListResponse.TotalPageCount">
            <summary>
                Gets or sets the total page count.
            </summary>
            <value>
                The total page count.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.ZCBBillResponse">
            <summary>
                ZCBBillResponse
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.BillIdentifier">
            <summary>
                流水标示字段
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.ProductIdentifier">
            <summary>
                项目唯一标示
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.CreateTime">
            <summary>
                创建时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.Type">
            <summary>
                交易类型 10认购 20提现
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.Principal">
            <summary>
                交易金额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.BankCardNo">
            <summary>
                银行卡号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.BankName">
            <summary>
                银行名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.BankCardCity">
            <summary>
                开户行城市全称，如 上海|上海
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.Status">
            <summary>
                流水状态 （10付款中 20认购成功 30认购失败 40取现已申请 50取现成功 60提现失败）
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.Remark">
            <summary>
                流水描述
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.DalayDate">
            <summary>
                预计提现到账时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBBillResponse.AgreementName">
            <summary>
                协议名称
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ZCBUserBillListResponse">
            <summary>
                资产包用户订单收益列表
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.ZCBUserBillListResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.OrderListResponse" /> class.
                Only for document.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.ZCBUserBillListResponse.#ctor(Domian.DTO.IPaginatedDto{Cat.Domain.Orders.Models.ZCBUserBill})">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.OrderListResponse" /> class.
            </summary>
            <param name="model">The orders.</param>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillListResponse.HasNextPage">
            <summary>
                Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
                <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillListResponse.ZCBUserBills">
            <summary>
                Gets or sets the products.
            </summary>
            <value>
                The products.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillListResponse.PageIndex">
            <summary>
                Gets or sets the index of the page.
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillListResponse.PageSize">
            <summary>
                页面大小
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillListResponse.TotalCount">
            <summary>
                总数据数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillListResponse.TotalPageCount">
            <summary>
                Gets or sets the total page count.
            </summary>
            <value>
                The total page count.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.ZCBUserBillResponse">
            <summary>
                ZCBUserBillResponse
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillResponse.BillDate">
            <summary>
                日期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillResponse.Principal">
            <summary>
                投资总额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillResponse.Yield">
            <summary>
                收益率
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillResponse.Interest">
            <summary>
                收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserBillResponse.Remark">
            <summary>
                备注
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ZCBUserResponse">
            <summary>
                ZCBUserResponse
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.ProductIdentifier">
            <summary>
                产品唯一标示符
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.ProductNo">
            <summary>
                产品编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.TotalPrincipal">
            <summary>
                投资总金额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.CurrentPrincipal">
            <summary>
                当前正在投资总额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.TotalInterest">
            <summary>
                累计总收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.TotalRedeemInterest">
            <summary>
                累计提现收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.YesterdayInterest">
            <summary>
                昨日收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBUserResponse.Yield">
            <summary>
                今日利率
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.PaginatedZCBProductInfosResponse">
            <summary>
                资产包产品列表
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.PaginatedZCBProductInfosResponse" /> class.
                Only for document.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.#ctor(Domian.DTO.IPaginatedDto{Cat.Domain.Products.Services.DTO.ProductWithSaleInfo{Cat.Domain.Products.ReadModels.ZCBProductInfo}})">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.PaginatedZCBProductInfosResponse" /> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.HasNextPage">
            <summary>
                Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
                <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.PageIndex">
            <summary>
                Gets or sets the index of the page.
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.PageSize">
            <summary>
                页面大小
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.Products">
            <summary>
                Gets or sets the products.
            </summary>
            <value>
                The products.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.TotalCount">
            <summary>
                总数据数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedZCBProductInfosResponse.TotalPageCount">
            <summary>
                Gets or sets the total page count.
            </summary>
            <value>
                The total page count.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.ZCBProductInfoResponse">
            <summary>
                资产包产品详情
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.AvailableShareCount">
            <summary>
                Gets or sets the available share count.
            </summary>
            <value>
                The available share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ConsignmentAgreementName">
            <summary>
                授权委托书名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.CurrentValueDate">
            <summary>
                Gets or sets the current value date.
            </summary>
            <value>
                The current value date.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.EnableSale">
            <summary>
                Gets or sets the enable share
            </summary>
            <value>
                The enable share.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.EndSellTime">
            <summary>
                Gets or sets the end sell time.
            </summary>
            <value>
                The end sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.FinancingSum">
            <summary>
                Gets or sets the financing sum.
            </summary>
            <value>
                The financing sum.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.FinancingSumCount">
            <summary>
                Gets or sets the financing sum count.
            </summary>
            <value>
                The financing sum count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.LaunchTime">
            <summary>
                Gets or sets the launch time.
            </summary>
            <value>
                The launch time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.MaxShareCount">
            <summary>
                Gets or sets the maximum share count.
            </summary>
            <value>
                The maximum share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.MinShareCount">
            <summary>
                Gets or sets the minimum share count.
            </summary>
            <value>
                The minimum share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.OnPreSale">
            <summary>
                Gets or sets a value indicating whether [on pre sale].
            </summary>
            <value>
                <c>true</c> if [on pre sale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.OnSale">
            <summary>
                Gets or sets a value indicating whether [on sale].
            </summary>
            <value>
                <c>true</c> if [on sale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.PaidPercent">
            <summary>
                销售百分比
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.PledgeAgreementName">
            <summary>
                投资协议名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.PreEndSellTime">
            <summary>
                Gets or sets the pre end sell time.
            </summary>
            <value>
                The pre end sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.PreSale">
            <summary>
                Gets or sets a value indicating whether [pre sale].
            </summary>
            <value>
                <c>true</c> if [pre sale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.PreStartSellTime">
            <summary>
                Gets or sets the pre start sell time.
            </summary>
            <value>
                The pre start sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ProductCategory">
            <summary>
                产品分类 （10金银猫产品 20富滇产品）
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ProductIdentifier">
            <summary>
                Gets or sets the product identifier.
            </summary>
            <value>
                The product identifier.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ProductName">
            <summary>
                Gets or sets the name of the product.
            </summary>
            <value>
                The name of the product.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ProductNo">
            <summary>
                Gets or sets the product no.
            </summary>
            <value>
                The product no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ProductNumber">
            <summary>
                Gets or sets the product number.
            </summary>
            <value>
                The product number.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ServerTime">
            <summary>
                Gets or sets the server time.
            </summary>
            <value>
                The server time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ShowingStatus">
            <summary>
                Gets or sets the showing status.
            </summary>
            <value>
                The showing status.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.StartSellTime">
            <summary>
                Gets or sets the start sell time.
            </summary>
            <value>
                The start sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.SumShareCount">
            <summary>
                Gets or sets the sum share count.
            </summary>
            <value>
                The sum share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.TotalInterest">
            <summary>
                Gets or sets the total interest
            </summary>
            <value>
                The total interest.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.TotalSaleAmount">
            <summary>
                Gets or sets the total sale amount
            </summary>
            <value>
                The total share amount.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.UnitPrice">
            <summary>
                Gets or sets the unit price.
            </summary>
            <value>
                The unit price.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ValueDate">
            <summary>
                Gets or sets the value date.
            </summary>
            <value>
                The value date.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ValueDateMode">
            <summary>
                Gets or sets the value date mode.
            </summary>
            <value>
                The value date mode.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.ValueDateString">
            <summary>
                Gets or sets the value date string.
            </summary>
            <value>
                The value date string.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ZCBProductInfoResponse.Yield">
            <summary>
                Gets or sets the yield.
            </summary>
            <value>
                The yield.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.TimelineOrderNodeResponse">
            <summary>
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ExtraInterest">
            <summary>
                额外收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.Interest">
            <summary>
                收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.OrderIdentifier">
            <summary>
                订单唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.OrderNo">
            <summary>
                订单编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.OrderTime">
            <summary>
                下单时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.OrderType">
            <summary>
                订单类型
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.Period">
            <summary>
                投资周期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.Principal">
            <summary>
                订单本金
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ProductIdentifier">
            <summary>
                项目唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ProductName">
            <summary>
                项目名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ProductNo">
            <summary>
                项目编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ProductNumber">
            <summary>
                项目期数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ProductUnitPrice">
            <summary>
                项目的单价，即每份多少钱
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.RepaymentDeadline">
            <summary>
                最迟还款日
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.SettleDate">
            <summary>
                结息日期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ShareCount">
            <summary>
                订单的购买份数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ShowingStatus">
            <summary>
                订单的显示状态
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.TotalAmount">
            <summary>
                订单的本息总额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.UseableItemCount">
            <summary>
                可用道具数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.ValueDate">
            <summary>
                起息日期
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineOrderNodeResponse.Yield">
            <summary>
                订单的项目收益率
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.RefundInfoOrderDto">
            <summary>
                RefundInfoOrderDto
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RefundInfoOrderDto.Interest">
            <summary>
                收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RefundInfoOrderDto.OrderIdentifier">
            <summary>
                订单唯一标识
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RefundInfoOrderDto.OrderNo">
            <summary>
                订单编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RefundInfoOrderDto.OrderTime">
            <summary>
                下单时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.RefundInfoOrderDto.Principal">
            <summary>
                订单本金
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.TimelineRefundNodeResponse">
            <summary>
                TimelineRefundNodeResponse
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineRefundNodeResponse.Orders">
            <summary>
                Gets or sets the orders.
            </summary>
            <value>
                The orders.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineRefundNodeResponse.Product">
            <summary>
                Gets or sets the product.
            </summary>
            <value>
                The product.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.TimelineResponse">
            <summary>
                TimelineResponse
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineResponse.Items">
            <summary>
                Gets or sets the items.
            </summary>
            <value>
                The items.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineResponse.Timestamp">
            <summary>
                Gets or sets the timestamp.
            </summary>
            <value>
                The timestamp.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineResponse.Updated">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:nyanya.Meow.Models.TimelineResponse" /> is updated.
            </summary>
            <value>
                <c>true</c> if updated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.TimelineNodeDto">
            <summary>
                时间线节点
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineNodeDto.Identifier">
            <summary>
                Identifier
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineNodeDto.Interest">
            <summary>
                收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineNodeDto.IsPast">
            <summary>
                Gets or sets a value indicating whether this instance is past.
            </summary>
            <value>
                <c>true</c> if this instance is past; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineNodeDto.Principal">
            <summary>
                本金
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineNodeDto.Time">
            <summary>
                时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TimelineNodeDto.Type">
            <summary>
                类型  TimeLineItemType =>
                -- Beginning = 0, (起始节点)
                -- Order = 10,（订单节点）
                -- Today = 20,（今天节点）
                -- Product = 30,（产品节点）
                -- End = 40（终止节点）
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.BAProductInfoResponse">
            <summary>
                银承产品详情
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.BAProductInfoResponse.BankName">
            <summary>
                Gets or sets the name of the bank.
            </summary>
            <value>
                The name of the bank.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.BAProductInfoResponse.BillNo">
            <summary>
                Gets or sets the bill no.
            </summary>
            <value>
                The bill no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.BAProductInfoResponse.BusinessLicense">
            <summary>
                Gets or sets the business license.
            </summary>
            <value>
                The business license.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.BAProductInfoResponse.EnterpriseName">
            <summary>
                Gets or sets the name of the enterprise.
            </summary>
            <value>
                The name of the enterprise.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.BAProductInfoResponse.Usage">
            <summary>
                Gets or sets the usage.
            </summary>
            <value>
                The usage.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.PaginatedBAProductInfosResponse">
            <summary>
                银承产品列表
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.PaginatedBAProductInfosResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.PaginatedBAProductInfosResponse" /> class.
                Only for document.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.PaginatedBAProductInfosResponse.#ctor(Domian.DTO.IPaginatedDto{Cat.Domain.Products.Services.DTO.ProductWithSaleInfo{Cat.Domain.Products.ReadModels.BAProductInfo}})">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.PaginatedBAProductInfosResponse" /> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedBAProductInfosResponse.HasNextPage">
            <summary>
                Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
                <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedBAProductInfosResponse.PageIndex">
            <summary>
                Gets or sets the index of the page.
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedBAProductInfosResponse.PageSize">
            <summary>
                页面大小
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedBAProductInfosResponse.Products">
            <summary>
                Gets or sets the products.
            </summary>
            <value>
                The products.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedBAProductInfosResponse.TotalCount">
            <summary>
                总数据数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedBAProductInfosResponse.TotalPageCount">
            <summary>
                Gets or sets the total page count.
            </summary>
            <value>
                The total page count.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.PaginatedTAProductInfosResponse">
            <summary>
                商承产品列表
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.PaginatedTAProductInfosResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.PaginatedTAProductInfosResponse" /> class.
                Only for document.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.PaginatedTAProductInfosResponse.#ctor(Domian.DTO.IPaginatedDto{Cat.Domain.Products.Services.DTO.ProductWithSaleInfo{Cat.Domain.Products.ReadModels.TAProductInfo}})">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.PaginatedTAProductInfosResponse" /> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedTAProductInfosResponse.HasNextPage">
            <summary>
                Gets or sets a value indicating whether this instance has next page.
            </summary>
            <value>
                <c>true</c> if this instance has next page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedTAProductInfosResponse.PageIndex">
            <summary>
                Gets or sets the index of the page.
            </summary>
            <value>
                The index of the page.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedTAProductInfosResponse.PageSize">
            <summary>
                页面大小
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedTAProductInfosResponse.Products">
            <summary>
                Gets or sets the products.
            </summary>
            <value>
                The products.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedTAProductInfosResponse.TotalCount">
            <summary>
                总数据数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.PaginatedTAProductInfosResponse.TotalPageCount">
            <summary>
                Gets or sets the total page count.
            </summary>
            <value>
                The total page count.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.ProductShowingStatus">
            <summary>
                用于显示的状态
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.ProductShowingStatus.BeforeSale">
            <summary>
                The before sale
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.ProductShowingStatus.OnPreSale">
            <summary>
                The on pre sale
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.ProductShowingStatus.OnSale">
            <summary>
                The on sale
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.ProductShowingStatus.SoldOut">
            <summary>
                The sold out
            </summary>
        </member>
        <member name="F:nyanya.Meow.Models.ProductShowingStatus.Finished">
            <summary>
                The finished
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ProductInfoResponse">
            <summary>
                产品信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.AvailableShareCount">
            <summary>
                Gets or sets the available share count.
            </summary>
            <value>
                The available share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.CurrentValueDate">
            <summary>
                Gets or sets the current value date.
            </summary>
            <value>
                The current value date.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.EndorseImageLink">
            <summary>
                Gets or sets the endorse image link.
            </summary>
            <value>
                The endorse image link.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.EndorseImageThumbnailLink">
            <summary>
                Gets or sets the endorse image thumbnail link.
            </summary>
            <value>
                The endorse image thumbnail link.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.EndSellTime">
            <summary>
                Gets or sets the end sell time.
            </summary>
            <value>
                The end sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ExtraYield">
            <summary>
                额外收益率
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.FinancingSum">
            <summary>
                Gets or sets the financing sum.
            </summary>
            <value>
                The financing sum.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.FinancingSumCount">
            <summary>
                Gets or sets the financing sum count.
            </summary>
            <value>
                The financing sum count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.LaunchTime">
            <summary>
                Gets or sets the launch time.
            </summary>
            <value>
                The launch time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.MaxShareCount">
            <summary>
                Gets or sets the maximum share count.
            </summary>
            <value>
                The maximum share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.MinShareCount">
            <summary>
                Gets or sets the minimum share count.
            </summary>
            <value>
                The minimum share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.OnPreSale">
            <summary>
                Gets or sets a value indicating whether [on pre sale].
            </summary>
            <value>
                <c>true</c> if [on pre sale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.OnSale">
            <summary>
                Gets or sets a value indicating whether [on sale].
            </summary>
            <value>
                <c>true</c> if [on sale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.PaidPercent">
            <summary>
                销售百分比
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.PaidShareCount">
            <summary>
                Gets or sets the paid share count.
            </summary>
            <value>
                The paid share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.PayingShareCount">
            <summary>
                Gets or sets the paying share count.
            </summary>
            <value>
                The paying share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.Period">
            <summary>
                Gets or sets the period.
            </summary>
            <value>
                The period.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.PreEndSellTime">
            <summary>
                Gets or sets the pre end sell time.
            </summary>
            <value>
                The pre end sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.PreSale">
            <summary>
                Gets or sets a value indicating whether [pre sale].
            </summary>
            <value>
                <c>true</c> if [pre sale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.PreStartSellTime">
            <summary>
                Gets or sets the pre start sell time.
            </summary>
            <value>
                The pre start sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ProductIdentifier">
            <summary>
                Gets or sets the product identifier.
            </summary>
            <value>
                The product identifier.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ProductName">
            <summary>
                Gets or sets the name of the product.
            </summary>
            <value>
                The name of the product.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ProductNo">
            <summary>
                Gets or sets the product no.
            </summary>
            <value>
                The product no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ProductNumber">
            <summary>
                Gets or sets the product number.
            </summary>
            <value>
                The product number.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.Repaid">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:nyanya.Meow.Models.BAProductInfoResponse" /> is repaid.
            </summary>
            <value>
                <c>true</c> if repaid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.RepaymentDeadline">
            <summary>
                Gets or sets the repayment deadline.
            </summary>
            <value>
                The repayment deadline.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ServerTime">
            <summary>
                Gets or sets the server time.
            </summary>
            <value>
                The server time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.SettleDate">
            <summary>
                Gets or sets the settle date.
            </summary>
            <value>
                The settle date.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ShowingStatus">
            <summary>
                Gets or sets the showing status.
            </summary>
            <value>
                The showing status.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.SoldOut">
            <summary>
                Gets or sets a value indicating whether [sold out].
            </summary>
            <value>
                <c>true</c> if [sold out]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.SoldOutTime">
            <summary>
                Gets or sets the sold out time.
            </summary>
            <value>
                The sold out time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.StartSellTime">
            <summary>
                Gets or sets the start sell time.
            </summary>
            <value>
                The start sell time.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.SumShareCount">
            <summary>
                Gets or sets the sum share count.
            </summary>
            <value>
                The sum share count.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.UnitPrice">
            <summary>
                Gets or sets the unit price.
            </summary>
            <value>
                The unit price.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ValueDate">
            <summary>
                Gets or sets the value date.
            </summary>
            <value>
                The value date.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ValueDateMode">
            <summary>
                Gets or sets the value date mode.
            </summary>
            <value>
                The value date mode.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ValueDateString">
            <summary>
                Gets or sets the value date string.
            </summary>
            <value>
                The value date string.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.Yield">
            <summary>
                Gets or sets the yield.
            </summary>
            <value>
                The yield.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductInfoResponse.ProductCategory">
            <summary>
            产品分类 （10金银猫产品 20富滇产品）
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ProductShareCacheModelExtensions">
            <summary>
                ProductShareCacheModelExtensions
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.ProductShareCacheModelExtensions.ToProductSaleProcessResponse(Infrastructure.Cache.Couchbase.ProductShareCacheModel)">
            <summary>
                To the product sale process response.
            </summary>
            <param name="model">The model.</param>
            <returns></returns>
        </member>
        <member name="T:nyanya.Meow.Models.ProductSaleProcessResponse">
            <summary>
                ProductSaleProcessResponse
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ProductSaleProcessResponse.Available">
            <summary>
                Gets or sets the available.
            </summary>
            <value>
                The available.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductSaleProcessResponse.Paid">
            <summary>
                Gets or sets the paid.
            </summary>
            <value>
                The paid.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductSaleProcessResponse.Paying">
            <summary>
                Gets or sets the paying.
            </summary>
            <value>
                The paying.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.ProductSaleProcessResponse.Sum">
            <summary>
                Gets or sets the sum.
            </summary>
            <value>
                The sum.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.TAProductInfoResponse">
            <summary>
                商票信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.BillNo">
            <summary>
                商承票号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.ConsignmentAgreementName">
            <summary>
                委托协议名
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.Drawee">
            <summary>
                付款方
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.DraweeInfo">
            <summary>
                付款方信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.EnterpriseInfo">
            <summary>
                融资方信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.EnterpriseLicense">
            <summary>
                融资企业营业执照编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.EnterpriseName">
            <summary>
                融资企业名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.GuaranteeMode">
            <summary>
                担保方式
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.PledgeAgreementName">
            <summary>
                质押借款协议名
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.Securedparty">
            <summary>
                担保方
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.SecuredpartyInfo">
            <summary>
                担保方信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.TAProductInfoResponse.Usage">
            <summary>
                融资用途
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ObtainRequest">
            <summary>
                获取升级信息请求参数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ObtainRequest.Channel">
            <summary>
                app市场
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ObtainRequest.Source">
            <summary>
                平台
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ObtainRequest.V">
            <summary>
                当前版本号
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.BankCardInfoResponse">
            <summary>
                用户信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.BankCardInfoResponse.BankCardNo">
            <summary>
                银行卡密码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.BankCardInfoResponse.CardBankName">
            <summary>
                银行名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.BankCardInfoResponse.IsDefault">
            <summary>
                是否是默认银行卡
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.LoginInfoResponse">
            <summary>
                用户登录信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.LoginInfoResponse.LoginName">
            <summary>
                Gets or sets the name of the login.
            </summary>
            <value>
                The name of the login.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.LoginInfoResponse.Valid">
            <summary>
                Gets or sets a value indicating whether this <see cref="T:nyanya.Meow.Models.LoginInfoResponse" /> is valid.
            </summary>
            <value>
                <c>true</c> if valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:nyanya.Meow.Models.SettlingProductInfoResponse">
            <summary>
                SettlingProductInfoResponse
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.ExtraInterest">
            <summary>
            额外收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.Interest">
            <summary>
                Gets or sets the interest.
            </summary>
            <value>
                The interest.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.Principal">
            <summary>
                Gets or sets the principal.
            </summary>
            <value>
                The principal.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.ProductIdentifier">
            <summary>
                Gets or sets the product identifier.
            </summary>
            <value>
                The product identifier.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.ProductName">
            <summary>
                Gets or sets the name of the product.
            </summary>
            <value>
                The name of the product.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.ProductNo">
            <summary>
                Gets or sets the product no.
            </summary>
            <value>
                The product no.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.ProductNumber">
            <summary>
                Gets or sets the product number.
            </summary>
            <value>
                The product number.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.ProductType">
            <summary>
                Gets or sets the type of the product.
            </summary>
            <value>
                The type of the product.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.SettleDate">
            <summary>
                Gets or sets the settle date.
            </summary>
            <value>
                The settle date.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.SettlingProductInfoResponse.ProductCategory">
            <summary>
            产品分类 （10金银猫产品 20富滇产品）
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.UserInfoResponse">
            <summary>
                用户信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.BankCardNo">
            <summary>
                默认银行卡密码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.BankCardsCount">
            <summary>
                银行卡数量
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.CardBankName">
            <summary>
                默认银行卡名称
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.Cellphone">
            <summary>
                手机号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.Credential">
            <summary>
                证件
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.CredentialNo">
            <summary>
                证件编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.HasDefaultBankCard">
            <summary>
                用户是否绑定了默认银行卡，也即是是否开通了手机支付
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.HasSetPaymentPassword">
            <summary>
                是否设定了支付密码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.HasYSBInfo">
            <summary>
                是否有银生宝的信息
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.LoginName">
            <summary>
                登录名
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.RealName">
            <summary>
                用户真实姓名.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.SignUpTime">
            <summary>
                用户注册时间
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.Verified">
            <summary>
                用户是否通过实名认证.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.Verifing">
            <summary>
                用户是否正在进行实名认证.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.YSBIdCard">
            <summary>
                银生宝认证的真实身份证号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInfoResponse.YSBRealName">
            <summary>
                银生宝的认证的真实姓名
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.UserInvestingInfoResponse">
            <summary>
                UserInvestingInfoResponse
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.UserInvestingInfoResponse.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.UserInvestingInfoResponse" /> class.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Models.UserInvestingInfoResponse.#ctor(System.Decimal,System.Decimal,Cat.Domain.Orders.Services.DTO.InvestingInfo)">
            <summary>
                Initializes a new instance of the <see cref="T:nyanya.Meow.Models.UserInvestingInfoResponse" /> class.
            </summary>
            <param name="maxIncomeSpeed">The maximum income speed.</param>
            <param name="userIncomeSpeed">The user income speed.</param>
            <param name="investingInfo">The investing information.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:nyanya.Meow.Models.UserInvestingInfoResponse.DefeatedPercent">
            <summary>
                打败的百分比
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInvestingInfoResponse.ExpectedInterest">
            <summary>
                预期收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInvestingInfoResponse.IncomePerMinute">
            <summary>
                每分钟赚取的收益
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInvestingInfoResponse.InvestingPrincipal">
            <summary>
                在投金额
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.UserInvestingInfoResponse.TotalInterest">
            <summary>
                已获收益
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.YSBUserInfoResponse">
            <summary>
                银生宝用户数据
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.YSBUserInfoResponse.IdCard">
            <summary>
                Gets or sets the identifier card.
            </summary>
            <value>
                The identifier card.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.YSBUserInfoResponse.RealName">
            <summary>
                Gets or sets the name of the real.
            </summary>
            <value>
                The name of the real.
            </value>
        </member>
        <member name="P:nyanya.Meow.Models.YSBUserInfoResponse.Verified">
            <summary>
                是否有银生宝数据
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.AddBankCardRequest">
            <summary>
                添加银行卡请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.AddBankCardRequest.BankCardNo">
            <summary>
                Gets or sets the bank card no.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.AddBankCardRequest.BankName">
            <summary>
                Gets or sets the name of the bank.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.AddBankCardRequest.CityName">
            <summary>
                Gets or sets the name of the city.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.AddBankCardStatusRequest">
            <summary>
                添加银行卡状态请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.AddBankCardStatusRequest.BankCardNo">
            <summary>
                Gets or sets the bank card no.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ResetPasswordRequest">
            <summary>
                重置密码请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ResetPasswordRequest.Password">
            <summary>
                用户设置的密码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ResetPasswordRequest.Token">
            <summary>
                验证码验证成功口令
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.ResetPaymentPasswordRequest">
            <summary>
                重置支付密码请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ResetPaymentPasswordRequest.BankCardNo">
            <summary>
                默认银行卡号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ResetPaymentPasswordRequest.CredentialNo">
            <summary>
                用户证件号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ResetPaymentPasswordRequest.Password">
            <summary>
                用户设置的支付密码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.ResetPaymentPasswordRequest.Token">
            <summary>
                验证码验证成功口令
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.SetPaymentPasswordRequest">
            <summary>
                设定支付密码请求模型
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SetPaymentPasswordRequest.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.SignInRequest">
            <summary>
                登陆请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignInRequest.Name">
            <summary>
                用户名
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignInRequest.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.SignInResponse">
            <summary>
                登陆结果
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignInResponse.Lock">
            <summary>
                账户是否被锁定
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignInResponse.RemainCount">
            <summary>
                剩余登陆次数
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignInResponse.Successful">
            <summary>
                登陆结果
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignInResponse.UserExist">
            <summary>
                用户是否存在
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.SignUpPaymentRequest">
            <summary>
                开通移动支付使用的请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpPaymentRequest.BankCardNo">
            <summary>
                Gets or sets the bank card no.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpPaymentRequest.BankName">
            <summary>
                Gets or sets the name of the bank.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpPaymentRequest.CityName">
            <summary>
                Gets or sets the name of the city.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpPaymentRequest.Credential">
            <summary>
                证件类型。0 => 身份证， 1 => 护照，2 => 台湾， 3=> 军官证
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpPaymentRequest.CredentialNo">
            <summary>
                Gets or sets the credential no.
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpPaymentRequest.RealName">
            <summary>
                Gets or sets the name of the real.
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.SignUpRequest">
            <summary>
                注册请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.ClientType">
            <summary>
                客户端类型
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.Code">
            <summary>
                识别码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.ContractId">
            <summary>
                活动编号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.FlgMoreI1">
            <summary>
                FlgMoreI1
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.FlgMoreI2">
            <summary>
                FlgMoreI2
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.FlgMoreS1">
            <summary>
                FlgMore1
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.FlgMoreS2">
            <summary>
                FlgMoreS2
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.InviteBy">
            <summary>
                邀请码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.Password">
            <summary>
                用户设置的密码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SignUpRequest.Token">
            <summary>
                验证码验证成功口令
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.SendVeriCodeRequest">
            <summary>
                验证码发送请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SendVeriCodeRequest.Cellphone">
            <summary>
                手机号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SendVeriCodeRequest.Type">
            <summary>
                验证码用途类型。10 => 注册，20 => 忘记密码，30 => 修改密码
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.SendVeriCodeResponse">
            <summary>
                验证码发送结果
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SendVeriCodeResponse.RemainCount">
            <summary>
                今天剩余发送次数，若为-1，则今天不能再次发送该类型验证码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.SendVeriCodeResponse.Successful">
            <summary>
                本次发送结果
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.VeriCodes.SendVeriCodeTokenRequest">
            <summary>
                验证码发送请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VeriCodes.SendVeriCodeTokenRequest.Cellphone">
            <summary>
                手机号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VeriCodes.SendVeriCodeTokenRequest.Type">
            <summary>
                验证码用途类型。10 => 注册，20 => 忘记密码，30 => 修改密码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VeriCodes.SendVeriCodeTokenRequest.Token">
            <summary>
                验证手机用TOKEN
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VeriCodes.VerifyVeriCodePhoneRequest.Cellphone">
            <summary>
                手机号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VeriCodes.VerifyVeriCodePhoneRequest.Result">
            <summary>
                验证码
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.VerifyVeriCodeRequest">
            <summary>
                验证码验证请求
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VerifyVeriCodeRequest.Cellphone">
            <summary>
                手机号
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VerifyVeriCodeRequest.Code">
            <summary>
                验证码
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VerifyVeriCodeRequest.Type">
            <summary>
                验证码用途类型。10 => 注册，20 => 重置登录密码，30 => 重置支付密码
            </summary>
        </member>
        <member name="T:nyanya.Meow.Models.VerifyVeriCodeResponse">
            <summary>
                验证码验证结果
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VerifyVeriCodeResponse.RemainCount">
            <summary>
                剩余验证次数，若为-1，则该验证码已失效
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VerifyVeriCodeResponse.Successful">
            <summary>
                本次验证结果
            </summary>
        </member>
        <member name="P:nyanya.Meow.Models.VerifyVeriCodeResponse.Token">
            <summary>
                验证码口令，如果验证码验证失败，则为空
            </summary>
        </member>
        <member name="T:nyanya.Meow.Services.Interfaces.IRuntimeCachedTimelineService">
            <summary>
                IRuntimeCachedTimelineService
            </summary>
        </member>
        <member name="T:nyanya.Meow.Services.TimelineService">
            <summary>
              TimelineService
            </summary>
        </member>
        <member name="M:nyanya.Meow.Services.TimelineService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:nyanya.Meow.Services.TimelineService"/> class.
            </summary>
        </member>
        <member name="M:nyanya.Meow.Services.TimelineService.GetTimelineAsync(System.String)">
            <summary>
            Gets the timeline asynchronous.
            </summary>
            <param name="userIdentifier">The user identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Snyanya.Meow.Controllers.FeedbacksController">
            <summary>
                喵喵反馈
            </summary>
        </member>
        <member name="M:Snyanya.Meow.Controllers.FeedbacksController.#ctor(Cat.Domain.Meow.Services.Interfaces.IFeedbackService)">
            <summary>
                Initializes a new instance of the <see cref="T:Snyanya.Meow.Controllers.FeedbacksController" /> class.
            </summary>
            <param name="feedbackService">The feedback service.</param>
        </member>
        <member name="M:Snyanya.Meow.Controllers.FeedbacksController.PostFeedback(nyanya.Meow.Models.FeedbackRequest)">
            <summary>
                创建反馈
            </summary>
            <param name="request">
                Content[string]: 反馈内容（不能超过2000字）
            </param>
            <returns>201</returns>
        </member>
    </members>
</doc>
